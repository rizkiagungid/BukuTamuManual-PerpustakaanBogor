<?php

namespace backend\modules\laporan\controllers;


use Yii;
use yii\helpers\Url;
//Widget
use kartik\widgets\Select2;
use kartik\mpdf\Pdf;
use kartik\date\DatePicker;

//Helpers
use yii\helpers\Html;
use yii\helpers\ArrayHelper;

//Models
use common\models\TujuanKunjungan;
use common\models\LocationLibrary;
use common\models\Locations;
use common\models\Members;
use common\models\MemberPerpanjangan;
use common\models\MasterPekerjaan;
use common\models\MasterPendidikan;
use common\models\MasterFakultas;
use common\models\MasterJurusan;
use common\models\MasterProgramStudi;
use common\models\KelasSiswa;
use common\models\Users;
use common\models\Collectionrules;
use common\models\Currency;
use common\models\JenisKelamin;
use common\models\Departments;
use common\models\Propinsi;
use common\models\Worksheets;
use common\models\VLapKriteriaAnggota;
use common\models\Collectioncategorys;
use common\models\Collectionsources;
use common\models\Collectionmedias;
use common\models\MasterJenisIdentitas;
use common\models\MasterRangeUmur;
use common\models\Masterkelasbesar;
use common\models\Kabupaten;
use common\models\Partners;
use common\models\JenisAnggota;
use common\models\Jenisdenda;
use common\models\Jenispelanggaran;
use common\models\Catalogs;

class SirkulasiController extends \yii\web\Controller
{
    /**
     * [actionIndex description]
     * @return [type] [description]
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionLaporanPeminjaman()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('laporan-peminjaman',[
            'model' => $model,
            ]);
    }

    public function actionPerpanjanganPeminjaman()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('perpanjangan-peminjaman',[
            'model' => $model,
            ]);
    }

    public function actionSangsiPelanggaranPeminjaman()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('sangsi-pelanggaran-peminjaman',[
            'model' => $model,
            ]);
    }

    public function actionKoleksiSeringDipinjam()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('koleksi-sering-dipinjam',[
            'model' => $model,
            ]);
    }


    public function actionAnggotaSeringMeminjam()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('laporan-anggota-sering-meminjam',[
            'model' => $model,
            ]);
    }


    public function actionKinerjaUserPeminjaman()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('kinerja-user-peminjaman',[
            'model' => $model,
            ]);
    }
    public function actionKinerjaUserPengembalian()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('kinerja-user-pengembalian',[
            'model' => $model,
            ]);
    }
    public function actionPengembalianTerlambat()
    {

        $model = array();

        unset($_SESSION['Array_POST_Filter']);

        return $this->render('pengembalian-terlambat',[
            'model' => $model,
            ]);
    }
    

    public function actionLoadFilterKriteriaDipinjam($kriteria)
{
        if ($kriteria == 'PublishLocation')
        {
            $sql = 'SELECT SPLIT_STR(catalogs.PublishLocation,":", 1) AS selecter FROM catalogs GROUP BY selecter';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'selecter','selecter');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'Publisher')
        {
            $sql = 'SELECT SPLIT_STR(catalogs.Publisher,",", 1) AS selecter FROM catalogs GROUP BY selecter';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'selecter','selecter');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'Subject')
        {
            $sql = 'SELECT catalogs.ID, catalogs.`Subject` AS selecter FROM catalogs GROUP BY selecter';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','selecter');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'PublishYear')
        {
            $sql = 'SELECT catalogs.ID, catalogs.`PublishYear` AS selecter FROM catalogs GROUP BY selecter';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','selecter');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'location_library')
        {
            $options =  ArrayHelper::map(LocationLibrary::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'locations')
        {
            $options =  ArrayHelper::map(Locations::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });

            //array_push( $options, "---Semua---");
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
            //var_dump($options2);
        }

        else if ($kriteria == 'collectionsources')
        {
            $options =  ArrayHelper::map(Collectionsources::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });

            //array_push( $options, "---Semua---");
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
            //var_dump($options2);
        }

        else if ($kriteria == 'partners')
        {
            $options =  ArrayHelper::map(Partners::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });

            //array_push( $options, "---Semua---");
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
            //var_dump($options2);
        }

        else if ($kriteria == 'currency')
        {
            $sql = 'SELECT * FROM currency';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'Currency',
                function($model) {
                    return $model['Currency'].' - '.$model['Description'];
                });
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'harga')
        {

            $contentOptions = '<div class="input-group">'.
            Html::textInput($kriteria.'[]',$value = null,
                ['class' => 'form-control col-sm-4','style' => 'width: 100%;','type'=>'number']
                ).
            '<center class="input-group-addon"> s/d </center>'.
            Html::textInput('to'.$kriteria.'[]',$value = null,
                ['class' => 'form-control col-sm-4','style' => 'width: 100%;','type'=>'number']
                ).'</div>';
        }

        else if ($kriteria == 'collectioncategorys')
        {
            $sql = 'SELECT * FROM collectioncategorys';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Name');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'collectionrules')
        {
            $sql = 'SELECT * FROM collectionrules';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Name');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'worksheets')
        {
            $sql = 'SELECT * FROM worksheets';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Name');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'collectionmedias')
        {
            $sql = 'SELECT * FROM collectionmedias';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Name');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'no_klas')
        {
            $sql = 'SELECT *, SUBSTR(master_kelas_besar.kdKelas,1,1) AS test FROM master_kelas_besar';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'test','namakelas');
            $options[null] = yii::t('app','---Semua---');
            $options[XI] = yii::t('app',' Lainnya');
            asort($options);
            // echo '<pre>';print_r($options);echo '</pre>';die;
            $contentOptions = '<div class="input-group">'.Html::dropDownList(  $kriteria.'[]',
                'selected option', $options, 
                ['class' => 'select2','style' => 'width: 100%;']
                ).'<center class="input-group-addon"> s/d </center>'.Html::dropDownList(  'to'.$kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2','style' => 'width: 100%;']
                ).'</div>';
        }


        else if ($kriteria == 'no_panggil')
        {
            $options = ['dimulai_dengan' => yii::t('app','Dimulai Dengan'),'tepat' => yii::t('app','Tepat'),'diakhiri_dengan' => yii::t('app','Diakhiri Dengan'),'salah_satu_isi' => yii::t('app','Salah Satu Isi')];
            $options = array_filter($options);

            $contentOptions = '<div class="input-group">'.Html::dropDownList('ini'.$kriteria.'[]',
                'selected option', $options, 
                ['class' => 'select2','style' => 'width: 100%;']
                ).'<div class="input-group-addon"> : </div>'.Html::textInput($kriteria.'[]',$value = null,
                ['class' => 'form-control col-sm-4','style' => 'width: 400px;']
                ).'</div>';
        }        
        else
        {
            $contentOptions = null;
        }
        return $contentOptions;
        
    }


    public function actionLoadFilterKriteria($kriteria)
    {
        if ($kriteria !== 'range_umur' && $kriteria !== 'jenis_kelamin' && $kriteria !== 'propinsi' && $kriteria !== 'Petugas_perpanjangan'&& $kriteria !== 'Jurusan_id' 
            && $kriteria !== 'propinsi2' && $kriteria !== 'lokasi_pinjam' && $kriteria !== 'kategori_koleksi' && $kriteria !== 'Kelas_id' && $kriteria !== 'program_studi_id' 
            && $kriteria !== 'jenis_identitas' && $kriteria !=='kabupaten' && $kriteria !=='kabupaten2' && $kriteria !=='Fakultas_id' 
            && $kriteria !=='data_entry' && $kriteria !== 'nama_institusi' && $kriteria !== 'Partners' && $kriteria !== 'jenis_sumber'
            && $kriteria !=='bentuk_fisik' && $kriteria !=='' && $kriteria !=='subjek' && $kriteria !=='peminjam_terbanyak' 
            && $kriteria !=='denda' && $kriteria !=='pelanggaran' && $kriteria !=='Kelas_dcc' && $kriteria !=='kataloger' && $kriteria !== 'kecamatan' && $kriteria !== 'kelurahan'
            && $kriteria !=='kriteria' && $kriteria !=='unit_kerja' && $kriteria !=='anggota' && $kriteria !=='penginput_data'
            && $kriteria !=='tanggal_akhir_berlaku' && $kriteria !=='no_anggota' && $kriteria !=='tujuan' && $kriteria !=='tujuan2'
            ) 
        {   
            $options = ArrayHelper::map(VLapKriteriaAnggota::find()->where(['kriteria'=>$kriteria])->all(),'id_dtl_anggota','dtl_anggota'); 
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
            );
        } 
        else if ($kriteria == 'Kelas_id')
        {
            $sql = 'SELECT kelas_siswa.namakelassiswa AS Kelas FROM kelas_siswa';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'Kelas','Kelas');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'Fakultas_id')
        {
            $sql = "SELECT * FROM master_fakultas";
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'id','Nama');
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'Jurusan_id')
        {
            $sql = "SELECT * FROM master_jurusan";
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'id','Nama');
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'program_studi_id')
        {
            $sql = "SELECT * FROM master_program_studi";
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'id','Nama');
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'range_umur')
        {
            $options =  ArrayHelper::map(MasterRangeUmur::find()->orderBy('id')->asArray()->all(),'id','Keterangan');
            $options = array_filter($options);

            array_unshift( $options, "---Semua Range---");

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        } 
        else if ($kriteria == 'jenis_kelamin')
        {
            $options =  ArrayHelper::map(JenisKelamin::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'propinsi')
        {
            $options =  ArrayHelper::map(Propinsi::find()->orderBy('NamaPropinsi')->asArray()->all(),'NamaPropinsi',
                function($model) {
                    return $model['NamaPropinsi'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'propinsi2')
        {
            $options =  ArrayHelper::map(Propinsi::find()->orderBy('NamaPropinsi')->asArray()->all(),'NamaPropinsi',
                function($model) {
                    return $model['NamaPropinsi'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'kabupaten')
        {
            $options =  ArrayHelper::map(Kabupaten::find()->orderBy('ID')->asArray()->all(),'NamaKab',
                function($model) {
                    return $model['NamaKab'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'kecamatan')
        {
            $sql = "SELECT DISTINCT(members.Kecamatan) AS kec FROM members WHERE members.Kecamatan != ''";
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'kec','kec');
            // $options2 = \yii\helpers\ArrayHelper::merge(["0"=>"---Semua---"],$options);
            $options[null] = yii::t('app',' ---Semua---');
            $options[XI] = yii::t('app',' Kosong');
            asort($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'kelurahan')
        {
            $sql = "SELECT DISTINCT(members.Kelurahan) AS kel FROM members WHERE members.Kelurahan != ''";
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'kel','kel');
            // $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $options[null] = yii::t('app',' ---Semua---');
            $options[XI] = yii::t('app',' Kosong');
            asort($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'kabupaten2')
        {
            $options =  ArrayHelper::map(Kabupaten::find()->orderBy('ID')->asArray()->all(),'NamaKab',
                function($model) {
                    return $model['NamaKab'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'lokasi_pinjam')
        {
            $sql = 'SELECT * FROM location_library';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Name');
            $options[null] = yii::t('app',' ---Semua---');
            $options[XI] = yii::t('app',' Kosong');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'unit_kerja')
        {
            $options =  ArrayHelper::map(Departments::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'kategori_koleksi')
        {
            $options =  ArrayHelper::map(Collectioncategorys::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });

            //array_push( $options, "---Semua---");
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
            //var_dump($options2);
        }
        else if ($kriteria == 'jenis_identitas')
        {
            $options =  ArrayHelper::map(MasterJenisIdentitas::find()->orderBy('id')->asArray()->all(),'id',
                function($model) {
                    return $model['Nama'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'nama_institusi')
        {
            $sql = 'SELECT * FROM members';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','InstitutionName');
            $options[null] = yii::t('app',' ---Semua---');
            $options[XI] = yii::t('app',' Kosong');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'jenis_sumber')
        {
            $options =  ArrayHelper::map(Collectionsources::find()->orderBy('ID')->asArray()->all(),'ID', 'Name');
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'Partners')
        {
            $options =  ArrayHelper::map(Partners::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });

            //array_push( $options, "---Semua---");
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'bentuk_fisik')
        {
            $options =  ArrayHelper::map(Collectionmedias::find()->orderBy('ID')->asArray()->all(),'ID', 'Name');
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }
        else if ($kriteria == 'denda')
        {
            $options =  ArrayHelper::map(Jenisdenda::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Name'];
                });
            
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'Kelas_dcc')
        {
            $options =  ArrayHelper::map(Masterkelasbesar::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['namakelas'];
                });
            array_unshift( $options, yii::t('app',' ---Semua---'));

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'pelanggaran')
        {
            $options =  ArrayHelper::map(Jenispelanggaran::find()->orderBy('ID')->asArray()->all(),'ID',
                function($model) {
                    return $model['Keterangan'];
                });

            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'anggota')
        {
            $sql = 'SELECT * FROM members';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','Fullname');
            asort($options);
            $options = array_filter($options);
            $options2 = \yii\helpers\ArrayHelper::merge(["0"=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'no_anggota')
        {
            $sql = 'SELECT * FROM members';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID',
                function($model) {
                    return $model['MemberNo'].' - '.$model['Fullname'];
                });
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'kriteria')
        {

            $options = ['0' => yii::t('app','Cantuman Kriteria Dibuat'),'1' => yii::t('app','Cantuman Kriteria Koreksi'),'2' => yii::t('app','Cantuman Kriteria Dihapus')];
           
            $options2 = \yii\helpers\ArrayHelper::merge([""=>yii::t('app',' ---Semua---')],$options);
            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options2, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'kataloger')
        {
            $sql = 'SELECT users.ID AS ID, CONCAT(users.username, " - ", users.Fullname) AS kataloger FROM users ';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','kataloger');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }  

        else if ($kriteria == 'penginput_data')
        {
            $sql = 'SELECT * FROM users';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID','username');
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'tujuan')
        {
            $sql = 'SELECT * FROM users';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID',
                function($model) {
                    return $model['username'].' - '.$model['Fullname'];
                });
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'Petugas_perpanjangan')
        {
            $sql = 'SELECT * FROM users';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID',
                function($model) {
                    return $model['username'].' - '.$model['Fullname'];
                });
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'tujuan2')
        {
            $sql = 'SELECT * FROM users';
            $data = Yii::$app->db->createCommand($sql)->queryAll(); 
            $options = ArrayHelper::map($data,'ID',
                function($model) {
                    return $model['username'].' - '.$model['Fullname'];
                });
            $options[0] = yii::t('app',' ---Semua---');
            asort($options);
            $options = array_filter($options);

            $contentOptions = Html::dropDownList( $kriteria.'[]',
                'selected option',  
                $options, 
                ['class' => 'select2 col-sm-6',]
                );
        }

        else if ($kriteria == 'data_entry')
        {
            $contentOptions = DatePicker::widget([
                'name' => $kriteria.'[]', 
                'type' => DatePicker::TYPE_RANGE,
                'value' => date('d-m-Y'),
                'name2' => 'to'.$kriteria.'[]', 
                'value2' => date('d-m-Y'),
                'separator' => 's/d',
                'options' => ['placeholder' => Yii::t('app','Choose').' '.Yii::t('app','Date')],
                'pluginOptions' => [
                    'format' => 'dd-mm-yyyy',
                    'todayHighlight' => true,
                    'autoclose'=>true,
                    'class' => 'datepicker',
                ]
                ]);
        } 
        else if ($kriteria == 'tanggal_akhir_berlaku')
        {
            $contentOptions = DatePicker::widget([
                'name' => $kriteria.'[]', 
                'type' => DatePicker::TYPE_RANGE,
                'value' => date('d-m-Y'),
                'name2' => 'to'.$kriteria.'[]', 
                'value2' => date('d-m-Y'),
                'separator' => 's/d',
                'options' => ['placeholder' => Yii::t('app','Choose').' '.Yii::t('app','Date')],
                'pluginOptions' => [
                    'format' => 'dd-mm-yyyy',
                    'todayHighlight' => true,
                    'autoclose'=>true,
                    'class' => 'datepicker',
                ]
                ]);
        } 
        else
        {
            $contentOptions = null;
        }
        return $contentOptions;
    }
     
    public function actionLoadSelecterLaporanPeminjaman($i)
    {
        return $this->renderPartial('select-laporan-peminjaman',['i'=>$i]);
    }
    public function actionLoadSelecterLaporanDipinjam($i)
    {
        return $this->renderPartial('select-laporan-dipinjam',['i'=>$i]);
    }
    public function actionLoadSelecterPerpanjanganPeminjaman($i)
    {
        return $this->renderPartial('select-perpanjangan-peminjaman',['i'=>$i]);
    }
    public function actionLoadSelecterSangsiPelanggaranPeminjaman($i)
    {
        return $this->renderPartial('select-sangsi-pelanggaran-peminjaman',['i'=>$i]);
    }
    public function actionLoadSelecterAnggotaSeringMeminjam($i)
    {
        return $this->renderPartial('select-anggota-sering-meminjam',['i'=>$i]);
    }

    public function actionLoadSelecterPeminjamanKriteria($i)
    {
        return $this->renderPartial('select-peminjaman-kriteria',['i'=>$i]);
    }
    public function actionLoadSelecterKriteriaAnggota($i)
    {
        return $this->renderPartial('select-kriteria-anggota',['i'=>$i]);
    }

    public function actionShowPdf($tampilkan)
    {
      
        // session_start();
        $_SESSION['Array_POST_Filter'] = $_POST;

        // echo "<pre>";
        // var_dump($_POST);
        // echo "</pre>";

        // print_r(count(array_filter($_POST['kriterias'])));
        // print_r(isset($_POST['kota_terbit']));
        if ($tampilkan == 'laporan-peminjaman-frekuensi')
        {
            echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-laporan-peminjaman-frekuensi').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );  
        }elseif ($tampilkan == 'laporan-peminjaman-data')
        {
            echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-laporan-peminjaman-data').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );  
        }
        elseif ($tampilkan == 'perpanjangan-peminjaman-frekuensi')
        {         
            echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-perpanjangan-peminjaman-frekuensi').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );    
        }
        elseif ($tampilkan == 'perpanjangan-peminjaman-data')
        {
             echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-perpanjangan-peminjaman-data').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );  
        }
        elseif ($tampilkan == 'sangsi-pelanggaran-peminjaman-frekuensi')
        {         
            echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-sangsi-pelanggaran-peminjaman-frekuensi').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );    
        }
        elseif ($tampilkan == 'sangsi-pelanggaran-peminjaman-data')
        {         
            echo (count(array_filter($_POST['kriterias'])) != 0 ? 
                '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-sangsi-pelanggaran-peminjaman-data').'">'."<iframe>"
                :"<script>swal('".yii::t('app','Pilih kriteria terlebih dahulu')."');</script>"
            );    
        }
        if ($tampilkan == 'koleksi-sering-dipinjam-frekuensi')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-koleksi-sering-dipinjam-frekuensi').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'koleksi-sering-dipinjam-data')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-koleksi-sering-dipinjam-data').'">';
            echo "<iframe>";
        }
        elseif ($tampilkan == 'anggota-sering-meminjam-frekuensi')
        {           
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-anggota-sering-meminjam-frekuensi').'">';
            echo '<iframe>';
        }
        elseif ($tampilkan == 'anggota-sering-meminjam-data')
        {          
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-anggota-sering-meminjam-data').'">';
            echo '<iframe>'; 
        }

        if ($tampilkan == 'kinerja-user-peminjaman-frekuensi')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-kinerja-user-peminjaman-frekuensi').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'kinerja-user-peminjaman-data')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-kinerja-user-peminjaman-data').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'kinerja-user-pengembalian-frekuensi')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-kinerja-user-pengembalian-frekuensi').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'kinerja-user-pengembalian-data')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-kinerja-user-pengembalian-data').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'pengembalian-terlambat-frekuensi')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-pengembalian-terlambat-frekuensi').'">';
            echo "<iframe>";
        }
        if ($tampilkan == 'pengembalian-terlambat-data')
        {            
            echo '<script>$("#export").show();</script><iframe class="col-sm-12" style="height: 500px; padding: 0;" src="'.Url::to('render-pengembalian-terlambat-data').'">';
            echo "<iframe>";
        }
    }

public function actionRenderLaporanPeminjamanData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $subjek = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }


        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
                
           $sql = "SELECT 
                    collectionloanitems.LoanDate AS TglPinjam,
                    collectionloanitems.DueDate AS TglJatuhTempo,
                    collectionloanitems.ActualReturn AS TglDikembalikan,
                    DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn) AS JumlahHariTelat, 
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    jenis_kelamin.Name AS J_kelamin,
                    master_range_umur.Keterangan AS umur,
                    master_kelas_besar.namakelas AS nomor_klass,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.CreateBy = users.ID) AS PetugasPeminjaman,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.UpdateBy = users.ID) AS PetugasPengembalian,
                    (SELECT COUNT(collectionloanitems.ID) FROM collectionloanitems WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode. $andValue." ) AS hitung
                    FROM collectionloanitems
                     INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id
                     LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id
                     INNER JOIN members ON members.ID = collectionloanitems.member_id
                     LEFT JOIN users ON users.ID = collectionloanitems.CreateBy
                     LEFT JOIN locations ON collections.Location_Id = locations.ID 
                     LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                     LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND master_range_umur.`umur2`
                    LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1)
                    ".$subjek."

                    WHERE DATE(collectionloanitems.LoanDate) ";
                    // LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                    // LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID 
                    // LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    // LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID 
                    // LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID 
                    // LEFT JOIN master_fakultas ON members.Fakultas_id = master_fakultas.ID 
                    // LEFT JOIN master_jurusan ON members.Jurusan_id = master_jurusan.ID 
                    // LEFT JOIN kelas_siswa ON members.Kelas_id = kelas_siswa.ID 
                    // LEFT JOIN status_anggota ON members.StatusAnggota_id = status_anggota.ID
                    // LEFT JOIN memberloanauthorizecategory ON memberloanauthorizecategory.Member_ID = members.ID 
                    // LEFT JOIN collectioncategorys ON memberloanauthorizecategory.CategoryLoan_id = collectioncategorys.ID 
                    // LEFT JOIN memberloanauthorizelocation ON memberloanauthorizelocation.Member_ID = members.ID 
                    // LEFT JOIN location_library ON memberloanauthorizelocation.LocationLoan_id = location_library.ID 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.') GROUP BY members.FullName';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        $sql .= ' ORDER BY collectionloanitems.LoanDate, members.FullName LIMIT 1000';

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
        // print_r($sql);
        // die;

        $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        // if (count($_POST['kriterias']) == 1 && implode($_POST[implode($_POST['kriterias'])]) !== "0") {
         
        //     $Berdasarkan .= ' (' .implode($_POST[implode($_POST['kriterias'])]). ')';
        // }

        // $Berdasarkan = '';
        // foreach ($_POST['kriterias'] as $key => $value) {
        //     $Berdasarkan .= $this->getRealNameKriteria($value).' ';
        // }

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-laporan-peminjaman-data', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelLaporanPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $subjek = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }


        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
                
           $sql = "SELECT 
                    collectionloanitems.LoanDate AS TglPinjam,
                    collectionloanitems.DueDate AS TglJatuhTempo,
                    collectionloanitems.ActualReturn AS TglDikembalikan,
                    DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn) AS JumlahHariTelat, 
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    jenis_kelamin.Name AS J_kelamin,
                    master_range_umur.Keterangan AS umur,
                    master_kelas_besar.namakelas AS nomor_klass,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.CreateBy = users.ID) AS PetugasPeminjaman,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.UpdateBy = users.ID) AS PetugasPengembalian
                    FROM collectionloanitems
                     INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id
                     LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id
                     INNER JOIN members ON members.ID = collectionloanitems.member_id
                     LEFT JOIN users ON users.ID = collectionloanitems.CreateBy
                     LEFT JOIN locations ON collections.Location_Id = locations.ID 
                     LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                     LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND master_range_umur.`umur2`
                    LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1)
                    ".$subjek."

                    WHERE DATE(collectionloanitems.LoanDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.') GROUP BY members.FullName';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        $sql .= ' ORDER BY collectionloanitems.LoanDate, members.FullName';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="11">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="11">'.yii::t('app','Sirkulasi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="11">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Jumlah Hari Telat').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Klass').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Jenis Kelamin').'</th>
                <th>'.yii::t('app','Kelompok Umur').'</th>
                <th>'.yii::t('app','Nama Petugas').'</th>
                <th>'.yii::t('app','Nama Petugas Pengambilan').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TglPinjam'].'</td>
                    <td>'.$data['TglJatuhTempo'].'</td>
                    <td>'.$data['TglDikembalikan'].'</td>
                    <td>'.$data['JumlahHariTelat'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['nomor_klass'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['J_kelamin'].'</td>
                    <td>'.$data['umur'].'</td>
                    <td>'.$data['PetugasPeminjaman'].'</td>
                    <td>'.$data['PetugasPengembalian'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtLaporanPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $subjek = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }

           $sql = "SELECT 
                    collectionloanitems.LoanDate AS TglPinjam,
                    collectionloanitems.DueDate AS TglJatuhTempo,
                    collectionloanitems.ActualReturn AS TglDikembalikan,
                    DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn) AS JumlahHariTelat, 
                    collections.NoInduk AS no_induk,
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    jenis_kelamin.Name AS J_kelamin,
                    master_range_umur.Keterangan AS umur,
                    master_kelas_besar.namakelas AS nomor_klass,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.CreateBy = users.ID) AS PetugasPeminjaman,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.UpdateBy = users.ID) AS PetugasPengembalian 
                    FROM collectionloanitems
                     INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id
                     LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id
                     INNER JOIN members ON members.ID = collectionloanitems.member_id
                     LEFT JOIN users ON users.ID = collectionloanitems.CreateBy
                     LEFT JOIN locations ON collections.Location_Id = locations.ID 
                     LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                     LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND master_range_umur.`umur2`
                    LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1)
                    ".$subjek."

                    WHERE DATE(collectionloanitems.LoanDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.') GROUP BY members.FullName';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        $sql .= ' ORDER BY collectionloanitems.LoanDate, members.FullName';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'TglPinjam'=> $model['TglPinjam'], 'TglJatuhTempo'=>$model['TglJatuhTempo'], 'TglDikembalikan'=>$model['TglDikembalikan'], 'JumlahHariTelat'=>$model['JumlahHariTelat'], 'no_induk'=>$model['no_induk']
                        , 'data'=>$model['data'], 'data2'=>$model['data2'], 'data3'=>$model['data3'], 'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 'NoAnggota'=>$model['NoAnggota']
                        , 'NamaAnggota'=>$model['NamaAnggota'], 'PetugasPeminjaman'=>$model['PetugasPeminjaman'], 'PetugasPengembalian'=>$model['PetugasPengembalian'], 'J_kelamin'=>$model['J_kelamin'], 'umur'=>$model['umur'], 'nomor_klass'=>$model['nomor_klass']);
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'sirkulasi_peminjaman'=> yii::t('app','Sirkulasi Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal_pinjam'=> yii::t('app','Tanggal Pinjam'),
        'tanggal_jatuhtempo'=> yii::t('app','Tanggal Jatuh Tempo'),
        'tanggal_dikembalikan'=> yii::t('app','Tanggal Dikembalikan'),
        'jumlah_haritelat'=> yii::t('app','Jumlah Hari Telat'),
        'nomor_induk'=> yii::t('app','Nomor Induk'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        'no_klass'=> yii::t('app','Nomor Klass'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama_anggota'=> yii::t('app','Nama Anggota'),
        'jenis_kelamin'=> yii::t('app','Jenis Kelamin'),
        'klompok_umur'=> yii::t('app','Kelompok Umur'),
        'nama_petugas'=> yii::t('app','Nama Petugas'),
        'nama_petugaspengambilan'=> yii::t('app','Nama Petugas Pengambilan'),
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS

    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-laporan-peminjaman-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-prminjaman-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordLaporanPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $subjek = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
                
           $sql = "SELECT 
                    collectionloanitems.LoanDate AS TglPinjam,
                    collectionloanitems.DueDate AS TglJatuhTempo,
                    collectionloanitems.ActualReturn AS TglDikembalikan,
                    DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn) AS JumlahHariTelat, 
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    jenis_kelamin.Name AS J_kelamin,
                    master_range_umur.Keterangan AS umur,
                    master_kelas_besar.namakelas AS nomor_klass,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.CreateBy = users.ID) AS PetugasPeminjaman,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.UpdateBy = users.ID) AS PetugasPengembalian 
                    FROM collectionloanitems
                     INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id
                     LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id
                     INNER JOIN members ON members.ID = collectionloanitems.member_id
                     LEFT JOIN users ON users.ID = collectionloanitems.CreateBy
                     LEFT JOIN locations ON collections.Location_Id = locations.ID 
                     LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                     LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND master_range_umur.`umur2`
                    LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1)
                    ".$subjek."

                    WHERE DATE(collectionloanitems.LoanDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.') GROUP BY members.FullName';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        $sql .= ' ORDER BY collectionloanitems.LoanDate, members.FullName';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Data.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="11">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="11">'.yii::t('app','Sirkulasi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="11">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Jumlah Hari Telat').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Klass').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Jenis Kelamin').'</th>
                <th>'.yii::t('app','Kelompok Umur').'</th>
                <th>'.yii::t('app','Nama Petugas').'</th>
                <th>'.yii::t('app','Nama Petugas Pengambilan').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TglPinjam'].'</td>
                    <td>'.$data['TglJatuhTempo'].'</td>
                    <td>'.$data['TglDikembalikan'].'</td>
                    <td>'.$data['JumlahHariTelat'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['nomor_klass'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['J_kelamin'].'</td>
                    <td>'.$data['umur'].'</td>
                    <td>'.$data['PetugasPeminjaman'].'</td>
                    <td>'.$data['PetugasPengembalian'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfLaporanPeminjamanData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $subjek = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }


        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
                
           $sql = "SELECT 
                    collectionloanitems.LoanDate AS TglPinjam,
                    collectionloanitems.DueDate AS TglJatuhTempo,
                    collectionloanitems.ActualReturn AS TglDikembalikan,
                    DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn) AS JumlahHariTelat, 
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    jenis_kelamin.Name AS J_kelamin,
                    master_range_umur.Keterangan AS umur,
                    master_kelas_besar.namakelas AS nomor_klass,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.CreateBy = users.ID) AS PetugasPeminjaman,
                    (SELECT users.FullName FROM users WHERE collectionloanitems.UpdateBy = users.ID) AS PetugasPengembalian 
                    FROM collectionloanitems
                     INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id
                     LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id
                     INNER JOIN members ON members.ID = collectionloanitems.member_id
                     LEFT JOIN users ON users.ID = collectionloanitems.CreateBy
                     LEFT JOIN locations ON collections.Location_Id = locations.ID 
                     LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                     LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND master_range_umur.`umur2`
                    LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1)
                    ".$subjek."

                    WHERE DATE(collectionloanitems.LoanDate) ";
                    // LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID 
                    // LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID 
                    // LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    // LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID 
                    // LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID 
                    // LEFT JOIN master_fakultas ON members.Fakultas_id = master_fakultas.ID 
                    // LEFT JOIN master_jurusan ON members.Jurusan_id = master_jurusan.ID 
                    // LEFT JOIN kelas_siswa ON members.Kelas_id = kelas_siswa.ID 
                    // LEFT JOIN status_anggota ON members.StatusAnggota_id = status_anggota.ID
                    // LEFT JOIN memberloanauthorizecategory ON memberloanauthorizecategory.Member_ID = members.ID 
                    // LEFT JOIN collectioncategorys ON memberloanauthorizecategory.CategoryLoan_id = collectioncategorys.ID 
                    // LEFT JOIN memberloanauthorizelocation ON memberloanauthorizelocation.Member_ID = members.ID 
                    // LEFT JOIN location_library ON memberloanauthorizelocation.LocationLoan_id = location_library.ID 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.') GROUP BY members.FullName';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        $sql .= ' ORDER BY collectionloanitems.LoanDate, members.FullName';

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
        // print_r($sql);
        // die;

        $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-laporan-peminjaman-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }


public function actionRenderPerpanjanganPeminjamanData() 
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }  

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['tujuan'])) {
        foreach ($_POST['tujuan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanextends.DateExtend,'%d-%M-%Y') AS TanggalPerpanjangan,
                DATE_FORMAT(collectionloanextends.DueDateExtend,'%d-%M-%Y') AS TanggalJatuhTempo,
                DATE_FORMAT(collectionloanextends.CreateDate,'%d-%M-%Y') AS TanggalDikembalikan,
                collections.NoInduk AS no_induk, 
                CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                members.MemberNo AS NoAnggota,
                members.FullName AS NamaAnggota,
                (SELECT FullName FROM users WHERE users.ID = collectionloanextends.CreateBy) AS Petugas 
                FROM collectionloanextends 
                INNER JOIN members ON collectionloanextends.Member_id = members.ID 
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID 
                INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;

        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanextends.DateExtend ';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-perpanjangan-peminjaman-data', $content),
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px; ">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelPerpanjanganPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }  

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['tujuan'])) {
        foreach ($_POST['tujuan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanextends.DateExtend,'%d-%M-%Y') AS TanggalPerpanjangan,
                DATE_FORMAT(collectionloanextends.DueDateExtend,'%d-%M-%Y') AS TanggalJatuhTempo,
                DATE_FORMAT(collectionloanextends.CreateDate,'%d-%M-%Y') AS TanggalDikembalikan,
                collections.NoInduk AS no_induk, 
                CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                members.MemberNo AS NoAnggota,
                members.FullName AS NamaAnggota,
                (SELECT FullName FROM users WHERE users.ID = collectionloanextends.CreateBy) AS Petugas 
                FROM collectionloanextends 
                INNER JOIN members ON collectionloanextends.Member_id = members.ID 
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID 
                INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;

        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanextends.DateExtend ';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .$this->getRealNameKriteria($value).'';
        }
        $Berdasarkan = implode(' dan ', $Berdasarkan);

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="9">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="9">'.yii::t('app','Sirkulasi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="9">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Perpanjangan').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama anggota').'</th>
                <th>'.yii::t('app','Petugas Perpanjangan').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TanggalPerpanjangan'].'</td>
                    <td>'.$data['TanggalJatuhTempo'].'</td>
                    <td>'.$data['TanggalDikembalikan'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['Petugas'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtPerpanjanganPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }  

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['tujuan'])) {
        foreach ($_POST['tujuan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanextends.DateExtend,'%d-%M-%Y') AS TanggalPerpanjangan,
                DATE_FORMAT(collectionloanextends.DueDateExtend,'%d-%M-%Y') AS TanggalJatuhTempo,
                DATE_FORMAT(collectionloanextends.CreateDate,'%d-%M-%Y') AS TanggalDikembalikan,
                collections.NoInduk AS no_induk, 
                CONCAT('',catalogs.Title,'','') AS data, 
                (CASE 
                 WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                 THEN CONCAT('',catalogs.Edition) 
                 ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                END) AS data2, 
                CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                catalogs.Publisher AS data4, 
                CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                CONCAT(catalogs.Subject, '') AS data6, 
                catalogs.DeweyNo AS data7,
                members.MemberNo AS NoAnggota,
                members.FullName AS NamaAnggota,
                (SELECT FullName FROM users WHERE users.ID = collectionloanextends.CreateBy) AS Petugas 
                FROM collectionloanextends 
                INNER JOIN members ON collectionloanextends.Member_id = members.ID 
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID 
                INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;

        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanextends.DateExtend ';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'TanggalPerpanjangan'=> $model['TanggalPerpanjangan'], 'TanggalJatuhTempo'=>$model['TanggalJatuhTempo'], 'TanggalDikembalikan'=>$model['TanggalDikembalikan'], 'no_induk'=>$model['no_induk'], 'data'=>$model['data'], 'data2'=>$model['data2'], 'data3'=>$model['data3']
                         , 'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 'NoAnggota'=>$model['NoAnggota'], 'NamaAnggota'=>$model['NamaAnggota'], 'Petugas'=>$model['Petugas'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'sirkulasi_peminjaman'=> yii::t('app','Sirkulasi Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal_perpanjangan'=> yii::t('app','Tanggal Perpanjangan'),
        'tanggal_jatuhtempo'=> yii::t('app','Tanggal Jatuh Tempo'),
        'tanggal_dikembalikan'=> yii::t('app','Tanggal Dikembalikan'),
        'nomor_induk'=> yii::t('app','Nomor Induk'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama_anggota'=> yii::t('app','Nama Anggota'),
        'petugas_perpanjangan'=> yii::t('app','Petugas Perpanjangan'),
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS

    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-perpanjangan-peminjaman-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-perpanjangan-peminjaman-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordPerpanjanganPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }  

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['tujuan'])) {
        foreach ($_POST['tujuan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanextends.DateExtend,'%d-%M-%Y') AS TanggalPerpanjangan,
                DATE_FORMAT(collectionloanextends.DueDateExtend,'%d-%M-%Y') AS TanggalJatuhTempo,
                DATE_FORMAT(collectionloanextends.CreateDate,'%d-%M-%Y') AS TanggalDikembalikan,
                collections.NoInduk AS no_induk, 
                CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                members.MemberNo AS NoAnggota,
                members.FullName AS NamaAnggota,
                (SELECT FullName FROM users WHERE users.ID = collectionloanextends.CreateBy) AS Petugas 
                FROM collectionloanextends 
                INNER JOIN members ON collectionloanextends.Member_id = members.ID 
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID 
                INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;

        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanextends.DateExtend ';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .$this->getRealNameKriteria($value).'';
        }
        $Berdasarkan = implode(' dan ', $Berdasarkan);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="9">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="9">'.yii::t('app','Transaksi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="9">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Perpanjangan').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama anggota').'</th>
                <th>'.yii::t('app','Petugas Perpanjangan').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TanggalPerpanjangan'].'</td>
                    <td>'.$data['TanggalJatuhTempo'].'</td>
                    <td>'.$data['TanggalDikembalikan'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['Petugas'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfPerpanjanganPeminjamanData()
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }  

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['tujuan'])) {
        foreach ($_POST['tujuan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanextends.DateExtend,'%d-%M-%Y') AS TanggalPerpanjangan,
                DATE_FORMAT(collectionloanextends.DueDateExtend,'%d-%M-%Y') AS TanggalJatuhTempo,
                DATE_FORMAT(collectionloanextends.CreateDate,'%d-%M-%Y') AS TanggalDikembalikan,
                collections.NoInduk AS no_induk, 
                CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                members.MemberNo AS NoAnggota,
                members.FullName AS NamaAnggota,
                (SELECT FullName FROM users WHERE users.ID = collectionloanextends.CreateBy) AS Petugas 
                FROM collectionloanextends 
                INNER JOIN members ON collectionloanextends.Member_id = members.ID 
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID 
                INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;

        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanextends.DateExtend ';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-perpanjangan-peminjaman-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }


public function actionRenderSangsiPelanggaranPeminjamanData() 
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun']; 
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }


        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

            $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS TglPinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d-%M-%Y') AS TglJatuhTempo,
                    DATE_FORMAT(collectionloanitems.UpdateDate,'%d-%M-%Y') AS TglDikembalikan,
                    CAST((CASE WHEN ActualReturn IS NOT NULL THEN (CASE WHEN @BedaHari > 0 THEN @BedaHari ELSE 0 END) ELSE (CASE WHEN @BedaHari2 > 0 THEN @BedaHari2 ELSE 0 END) END) AS CHAR(50)) AS JumlahHariTelat,
                    jenis_pelanggaran.JenisPelanggaran as jenis_pelanggaran,
                    pelanggaran.JumlahDenda AS DendaUang,
                    pelanggaran.JumlahSuspend AS Skorsing,
                    collections.NoInduk AS no_induk, 
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    users.username AS PetugasPeminjaman, 
                    users.username AS PetugasPengembalian  
                    FROM pelanggaran 
                    LEFT JOIN jenis_pelanggaran ON pelanggaran.JenisPelanggaran_id = pelanggaran.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             $sql .= ' ORDER BY collectionloanitems.LoanDate';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content['kop'] = isset($_POST['kop']);

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' =>0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-sangsi-pelanggaran-peminjaman-data', $content),
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelSangsiPelanggaranPeminjamanData()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun']; 
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }


        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

            $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS TglPinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d-%M-%Y') AS TglJatuhTempo,
                    DATE_FORMAT(collectionloanitems.UpdateDate,'%d-%M-%Y') AS TglDikembalikan,
                    CAST((CASE WHEN ActualReturn IS NOT NULL THEN (CASE WHEN @BedaHari > 0 THEN @BedaHari ELSE 0 END) ELSE (CASE WHEN @BedaHari2 > 0 THEN @BedaHari2 ELSE 0 END) END) AS CHAR(50)) AS JumlahHariTelat,
                    jenis_pelanggaran.JenisPelanggaran as jenis_pelanggaran,
                    pelanggaran.JumlahDenda AS DendaUang,
                    pelanggaran.JumlahSuspend AS Skorsing,
                    collections.NoInduk AS no_induk, 
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    users.username AS PetugasPeminjaman, 
                    users.username AS PetugasPengembalian  
                    FROM pelanggaran 
                    LEFT JOIN jenis_pelanggaran ON pelanggaran.JenisPelanggaran_id = pelanggaran.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.LoanDate';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="14">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="14">'.yii::t('app','Sangsi Pelanggaran Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="14">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Jumlah Hari Telat').'</th>
                <th>'.yii::t('app','Jenis Pelanggaran').'</th>
                <th>'.yii::t('app','Denda Uang').'</th>
                <th>'.yii::t('app','Skorsing').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Petugas Peminjaman').'</th>
                <th>'.yii::t('app','Petugas Pengembalian').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TglPinjam'].'</td>
                    <td>'.$data['TglJatuhTempo'].'</td>
                    <td>'.$data['TglDikembalikan'].'</td>
                    <td>'.$data['JumlahHariTelat'].'</td>
                    <td>'.$data['jenis_pelanggaran'].'</td>
                    <td>'.$data['DendaUang'].'</td>
                    <td>'.$data['Skorsing'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['PetugasPeminjaman'].'</td>
                    <td>'.$data['PetugasPengembalian'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtSangsiPelanggaranPeminjamanData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun']; 
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }


        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

            $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS TglPinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d-%M-%Y') AS TglJatuhTempo,
                    DATE_FORMAT(collectionloanitems.UpdateDate,'%d-%M-%Y') AS TglDikembalikan,
                    CAST((CASE WHEN ActualReturn IS NOT NULL THEN (CASE WHEN @BedaHari > 0 THEN @BedaHari ELSE 0 END) ELSE (CASE WHEN @BedaHari2 > 0 THEN @BedaHari2 ELSE 0 END) END) AS CHAR(50)) AS JumlahHariTelat,
                    jenis_pelanggaran.JenisPelanggaran as jenis_pelanggaran,
                    pelanggaran.JumlahDenda AS DendaUang,
                    pelanggaran.JumlahSuspend AS Skorsing,
                    collections.NoInduk AS no_induk, 
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    users.username AS PetugasPeminjaman, 
                    users.username AS PetugasPengembalian  
                    FROM pelanggaran 
                    LEFT JOIN jenis_pelanggaran ON pelanggaran.JenisPelanggaran_id = pelanggaran.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.LoanDate';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .$this->getRealNameKriteria($value).'';
        }
        $Berdasarkan = implode(' dan ', $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'TglPinjam'=> $model['TglPinjam'], 'TglJatuhTempo'=>$model['TglJatuhTempo'], 'TglDikembalikan'=>$model['TglDikembalikan'], 'JumlahHariTelat'=>$model['JumlahHariTelat'], 'jenis_pelanggaran'=>$model['jenis_pelanggaran'], 'DendaUang'=>$model['DendaUang'], 'Skorsing'=>$model['Skorsing'], 'no_induk'=>$model['no_induk'], 'data'=>$model['data']
                         , 'data2'=>$model['data2'], 'data3'=>$model['data3'], 'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 'NoAnggota'=>$model['NoAnggota'], 'NamaAnggota'=>$model['NamaAnggota'], 'PetugasPeminjaman'=>$model['PetugasPeminjaman'], 'PetugasPengembalian'=>$model['PetugasPengembalian'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'sangsi_pelanggaranpeminjaman'=> yii::t('app','Sangsi Pelanggaran Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal_pinjam'=> yii::t('app','Tanggal Pinjam'),
        'tanggal_jatuhtempo'=> yii::t('app','Tanggal Jatuh Tempo'),
        'tanggal_dikembalikan'=> yii::t('app','Tanggal Dikembalikan'),
        'jumlah_haritelat'=> yii::t('app','Jumlah Hari Telat'),
        'jenis_pelanggaran'=> yii::t('app','Jenis Pelanggaran'),
        'denda_uang'=> yii::t('app','Denda Uang'),
        'skorsing'=> yii::t('app','Skorsing'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama_anggota'=> yii::t('app','Nama Anggota'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        'nomor_induk'=> yii::t('app','Nomor Induk'),
        'petugas_peminjaman'=> yii::t('app','Petugas Peminjaman'),
        'petugas_pengembalian'=> yii::t('app','Petugas Pengembalian'),
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS

    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-pelanggaran-peminjaman-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-pelanggaran-peminjaman-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordSangsiPelanggaranPeminjamanData()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun']; 
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }


        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

            $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS TglPinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d-%M-%Y') AS TglJatuhTempo,
                    DATE_FORMAT(collectionloanitems.UpdateDate,'%d-%M-%Y') AS TglDikembalikan,
                    CAST((CASE WHEN ActualReturn IS NOT NULL THEN (CASE WHEN @BedaHari > 0 THEN @BedaHari ELSE 0 END) ELSE (CASE WHEN @BedaHari2 > 0 THEN @BedaHari2 ELSE 0 END) END) AS CHAR(50)) AS JumlahHariTelat,
                    jenis_pelanggaran.JenisPelanggaran as jenis_pelanggaran,
                    pelanggaran.JumlahDenda AS DendaUang,
                    pelanggaran.JumlahSuspend AS Skorsing,
                    collections.NoInduk AS no_induk, 
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    users.username AS PetugasPeminjaman, 
                    users.username AS PetugasPengembalian  
                    FROM pelanggaran 
                    LEFT JOIN jenis_pelanggaran ON pelanggaran.JenisPelanggaran_id = pelanggaran.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.LoanDate';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="14">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="14">'.yii::t('app','Sangsi Pelanggaran Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="14">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tanggal Dikembalikan').'</th>
                <th>'.yii::t('app','Jumlah Hari Telat').'</th>
                <th>'.yii::t('app','Jenis Pelanggaran').'</th>
                <th>'.yii::t('app','Denda Uang').'</th>
                <th>'.yii::t('app','Skorsing').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
                <th>'.yii::t('app','Petugas Peminjaman').'</th>
                <th>'.yii::t('app','Petugas Pengembalian').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TglPinjam'].'</td>
                    <td>'.$data['TglJatuhTempo'].'</td>
                    <td>'.$data['TglDikembalikan'].'</td>
                    <td>'.$data['JumlahHariTelat'].'</td>
                    <td>'.$data['jenis_pelanggaran'].'</td>
                    <td>'.$data['DendaUang'].'</td>
                    <td>'.$data['Skorsing'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['DataBib'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td>'.$data['PetugasPeminjaman'].'</td>
                    <td>'.$data['PetugasPengembalian'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfSangsiPelanggaranPeminjamanData()
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun']; 
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }


        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

            $sql = "SELECT @MemberID := members.id,DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS TglPinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d-%M-%Y') AS TglJatuhTempo,
                    DATE_FORMAT(collectionloanitems.UpdateDate,'%d-%M-%Y') AS TglDikembalikan,
                    CAST((CASE WHEN ActualReturn IS NOT NULL THEN (CASE WHEN @BedaHari > 0 THEN @BedaHari ELSE 0 END) ELSE (CASE WHEN @BedaHari2 > 0 THEN @BedaHari2 ELSE 0 END) END) AS CHAR(50)) AS JumlahHariTelat,
                    jenis_pelanggaran.JenisPelanggaran as jenis_pelanggaran,
                    pelanggaran.JumlahDenda AS DendaUang,
                    pelanggaran.JumlahSuspend AS Skorsing,
                    collections.NoInduk AS no_induk, 
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_ID <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    users.username AS PetugasPeminjaman, 
                    users.username AS PetugasPengembalian  
                    FROM pelanggaran 
                    LEFT JOIN jenis_pelanggaran ON pelanggaran.JenisPelanggaran_id = pelanggaran.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             $sql .= ' ORDER BY collectionloanitems.LoanDate';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content_kop['kop'] = isset($_POST['kop']);

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-sangsi-pelanggaran-peminjaman-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }

public function actionRenderKoleksiSeringDipinjamData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];            
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY jum_eks DESC
                    LIMIT ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
            }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." 
                    GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.CreateDate) ".$sqlPeriode." 
                    GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.CreateDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'','
                    ') AS DATA, COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC) a on a.cat_id =  collections.Catalog_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
        
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['inValue'] =  $inValue;  
        // $content['isi_berdasarkan'] = $isi_kriteria;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            /*$header =  ['<img src="<?= Yii::getAlias('@uploaded_files/aplikasi/kop.png');?>" >'];*/
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-koleksi-sering-dipinjam-data', $content),
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelKoleksiSeringDipinjamData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];            
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY jum_eks DESC
                    LIMIT ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
            }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." 
                    GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.CreateDate) ".$sqlPeriode." 
                    GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.CreateDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'','
                    ') AS DATA, COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC) a on a.cat_id =  collections.Catalog_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="8">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Koleksi Sering Dipinjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th colspan="3">'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: middle;">'.$no.'</td>
                    <td style="vertical-align: middle;">'.$data['Periode'].'</td>
                    <td colspan="3" style="text-align: left;">'.$data['DataBib'].'</td>
                    <td style="vertical-align: middle;">'.$data['no_anggota'].'</td>
                    <td style="vertical-align: middle;">'.$data['Nama'].'</td>
                    <td style="vertical-align: middle;">'.$data['no_induk'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtKoleksiSeringDipinjamData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            $inValue = $_POST['rank'];            
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY jum_eks DESC
                    LIMIT ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS TglBaca, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS NoInduk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, data ASC LIMIT ";
             $sql .= $data2['unt_limit'];
            }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." 
                    GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS TglBaca, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS NoInduk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, data ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.CreateDate) ".$sqlPeriode." 
                    GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.CreateDate AS TglBaca, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS NoInduk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'','
                    ') AS DATA, COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC) a on a.cat_id =  collections.Catalog_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, data ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }


    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = $inValue;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'TglBaca'=> $model['TglBaca'], 'NoInduk'=>$model['NoInduk'], 'data'=>$model['data'], 'data2'=>$model['data2'], 'data3'=>$model['data3'], 'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 
                        'no_anggota'=>$model['no_anggota'], 'Nama'=>$model['Nama'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'inValue'=>$inValue, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'koleksi_seringdipinjam'=> yii::t('app','Koleksi Sering Dipinjam'),
        'berdasarkan_ranking'=> yii::t('app','Berdasarkan Ranking'),
        'tanggal_pinjam'=> yii::t('app','Tanggal Pinjam'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama'=> yii::t('app','Nama'),
        'nomor_induk'=> yii::t('app','Nomor Induk'),
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS

    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-koleksi-sering-dipinjam-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-koleksi-sering-dipinjam-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordKoleksiSeringDipinjamData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];            
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY jum_eks DESC
                    LIMIT ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
            }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." 
                    GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.CreateDate) ".$sqlPeriode." 
                    GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.CreateDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'','
                    ') AS DATA, COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC) a on a.cat_id =  collections.Catalog_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Data.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="900"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Koleksi Sering Dipinjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th colspan="3">'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama').'</th>
                <th>'.yii::t('app','Nomor Induk').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: middle;">'.$no.'</td>
                    <td style="text-align: left;">'.$data['DataBib'].'</td>
                    <td style="vertical-align: middle;">'.$data['Periode'].'</td>
                    <td style="vertical-align: middle;">'.$data['no_anggota'].'</td>
                    <td style="vertical-align: middle;">'.$data['Nama'].'</td>
                    <td style="vertical-align: middle;">'.$data['no_induk'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfKoleksiSeringDipinjamData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];            
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY jum_eks DESC
                    LIMIT ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
            }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." 
                    GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.LoanDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') AS Periode, collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'',' ') AS DATA,
                    COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON
                    collections.Catalog_id = catalogs.ID WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC) 
                    a ON a.cat_id = collections.Catalog_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') 
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.jum_eks),0) AS unt_limit FROM (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, COUNT(collections.Catalog_id) AS jum_eks FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.CreateDate) ".$sqlPeriode." 
                    GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY jum_eks DESC 
                    LIMIT ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT collectionloanitems.CreateDate AS Periode, 
                    members.MemberNo AS no_anggota, 
                    members.fullname AS Nama, 
                    collections.NoInduk AS no_induk, 
                    collections.Catalog_id AS cat_id,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    INNER JOIN (SELECT collections.ID AS ID, collections.Catalog_id AS cat_id, CONCAT('',catalogs.Title,'','
                    ') AS DATA, COUNT(collections.Catalog_id) AS Jumlah FROM collectionloanitems LEFT JOIN
                    collections ON collectionloanitems.Collection_id = collections.ID LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY
                    YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC) a on a.cat_id =  collections.Catalog_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= " ORDER BY Jumlah DESC, DataBib ASC LIMIT ";
             $sql .= $data2['unt_limit'];
                }

        
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['inValue'] =  $inValue;  
        // $content['isi_berdasarkan'] = $isi_kriteria;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            /*$header =  ['<img src="<?= Yii::getAlias('@uploaded_files/aplikasi/kop.png');?>" >'];*/
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-koleksi-sering-dipinjam-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }

public function actionRenderAnggotaSeringMeminjamData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

   
            $inValue = $_POST['rank'];
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        // if (count($_POST['kriterias']) == 1 && implode($_POST[implode($_POST['kriterias'])]) !== "0") {
         
        //     $Berdasarkan .= ' (' .implode($_POST[implode($_POST['kriterias'])]). ')';
        // }

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content['inValue'] = $inValue;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-anggota-sering-meminjam-data', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelAnggotaSeringMeminjamData()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
   
            $inValue = $_POST['rank'];
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="8">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Anggota Sering Meminjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','>Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','>Tanggal').'</th>
                <th>'.yii::t('app','>Nomor Anggota').'</th>
                <th>'.yii::t('app','>Nama Anggota').'</th>
                <th>'.yii::t('app','>Nomor Induk').'</th>
                <th colspan="3">'.yii::t('app','>Data Bibliografis').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: middle;">'.$no.'</td>
                    <td style="vertical-align: middle;">'.$data['TglPinjam'].'</td>
                    <td style="vertical-align: middle;">'.$data['NoAnggota'].'</td>
                    <td style="vertical-align: middle;">'.$data['NamaAnggota'].'</td>
                    <td style="vertical-align: middle;">'.$data['no_induk'].'</td>
                    <td colspan="3" style="text-align: left;">'.$data['DataBib'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtAnggotaSeringMeminjamData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            $inValue = $_POST['rank'];
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT(catalogs.Title,'') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT(catalogs.Title,'') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT(catalogs.Title,'') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                    CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                    catalogs.Publisher AS data4, 
                    CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                    CONCAT(catalogs.Subject, '') AS data6, 
                    catalogs.DeweyNo AS data7
                    FROM collectionloanitems
                    INNER JOIN (SELECT members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'TglPinjam'=> $model['TglPinjam'], 'data'=>$model['data'], 'data2'=>$model['data2'], 'data3'=>$model['data3'], 'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 'no_induk'=>$model['no_induk'], 
            'NoAnggota'=>$model['NoAnggota'], 'NamaAnggota'=>$model['NamaAnggota']);
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'inValue'=>$inValue, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'anggota_seringmeminjam'=> yii::t('app','Anggota Sering Meminjam'),
        'berdasarkan_ranking'=> yii::t('app','Berdasarkan Ranking'),
        'tanggal'=> yii::t('app','Tanggal'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama_anggota'=> yii::t('app','Nama Anggota'),
        'nomor_induk'=> yii::t('app','Nomor Induk'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS

    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-anggota-sering-meminjam-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-anggota-sering-meminjam-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordAnggotaSeringMeminjamData()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
   
            $inValue = $_POST['rank'];
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    if ($type == doc) {
    echo '<table border="0" align="center" width="1200"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Anggota Sering Meminjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    }else{
        echo '<table border="0" align="center" width="900"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Anggota Sering Meminjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    }
    echo '<table border="1" align="center">
            <tr style="margin-left: 20px; margin-right: 20px;">
                <th>No.</th>
                <th>'.yii::t('app','>Tanggal').'</th>
                <th>'.yii::t('app','>Nomor Anggota').'</th>
                <th>'.yii::t('app','>Nama Anggota').'</th>
                <th>'.yii::t('app','>Nomor Induk').'</th>
                <th colspan="3">'.yii::t('app','>Data Bibliografis').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['TglPinjam'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['no_induk'].'</td>
                    <td style="text-align: left;">'.$data['DataBib'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfAnggotaSeringMeminjamData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

   
            $inValue = $_POST['rank'];
            if ($_POST['periode'] == "harian"){
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            elseif ($_POST['periode'] == "bulanan") {
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";
            
            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') Periode, members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id AND a.Periode = DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y')
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }
            else{
            $sql2 = "SELECT IFNULL(SUM(a.JumlahEksemplar),0) AS unt_limit FROM (SELECT COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                     LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                     WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC LIMIT 
                     ".$inValue.") a";

            $data2 = Yii::$app->db->createCommand($sql2)->queryOne(); 

            $sql = "SELECT
                    collectionloanitems.LoanDate AS TglPinjam,
                    members.MemberNo AS NoAnggota,
                    members.FullName AS NamaAnggota,
                    collections.NoInduk AS no_induk,
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>',(CASE WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 THEN CONCAT('<br/>',catalogs.Edition) ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) END),'<br/>',catalogs.PublishLocation,' ',catalogs.Publisher,' ',catalogs.PublishYear,'<br/>',catalogs.Subject,'<br/>',catalogs.DeweyNo) AS DataBib
                    FROM collectionloanitems
                    INNER JOIN (SELECT members.ID AS m_id, members.FullName AS NamaAnggota, COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar FROM collectionloanitems LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    WHERE DATE(collectionloanitems.LoanDate) ".$sqlPeriode." GROUP BY collectionloanitems.member_id ORDER BY JumlahEksemplar DESC) a ON a.m_id = collectionloanitems.member_id
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
            
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            $sql .= ' ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") DESC, NamaAnggota ASC LIMIT ';
            $sql .= $data2['unt_limit'];
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content['inValue'] = $inValue;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-anggota-sering-meminjam-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }

public function actionRenderKinerjaUserPeminjamanData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                // else{
                //    $andValue .= " AND modelhistory.type = '0' "; 
                // }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CONCAT(
                   CASE
                    WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                    WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                    WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                    WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                    ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                   END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '-->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) AS actions 
                   FROM modelhistory 
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';} 


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" />'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginRight' => 0,
            'marginLeft' => 0,
            'content' => $this->renderPartial('pdf-view-kinerja-user-peminjaman-data', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
        ]);
        return $pdf->render();

    }

public function actionExportExcelKinerjaUserPeminjamanData()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CONCAT(
                   CASE
                    WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                    WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                    WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                    WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                    ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                   END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '-->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) AS actions 
                   FROM modelhistory
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = 'Berdasarkan';
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = 'dan';
        }else{ $dan = '';} 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Peminjaman_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Kinerja User Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th style="vertical-align: center;">No.</th>
                <th style="vertical-align: center;">'.yii::t('app','Tanggal').'</th>
                <th style="vertical-align: center;">Username / <br /> Full name</th>
                <th style="vertical-align: center;">'.yii::t('app','Jenis Aktifitas').'</th>
                <th style="vertical-align: center;">'.yii::t('app','ID Data').'</th>
                <th style="vertical-align: center;">'.yii::t('app','Deskripsi').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: center;">'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td style="vertical-align: center;">'.$data['nama_kriteria'].'</td>
                    <td style="vertical-align: center;">'.$data['id_record'].'</td>
                    <td align="left">'.$data['actions'].'</td>
                </tr>
            ';
         $no++;
        endforeach; 
    echo '</table>';

}

public function actionExportExcelOdtKinerjaUserPeminjamanData()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode,
                users.UserName AS Kataloger, 
                users.Fullname AS Kataloger1, 
                modelhistory.field_id AS f_id, 
                modelhistory.type AS kriteria, 
                CASE 
                 WHEN modelhistory.type = '0' THEN 'Entri'
                 WHEN modelhistory.type = '1' THEN 'Koreksi'
                 ELSE 'Hapus' 
                END AS nama_kriteria,  
                modelhistory.field_id AS id_record, 
                CONCAT(
                CASE
                 WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                 WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                 WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                 WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                 ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                END
                , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '-->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) AS actions 
                FROM modelhistory 
                LEFT JOIN users ON modelhistory.user_id = users.ID 
                LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = 'Berdasarkan';
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = 'dan';
        }else{ $dan = '';}


    $DetailFilterKriteria = $DetailFilter['kriteria'];
    $DetailFilterKataloger = $DetailFilter['kataloger'];

    $headers = Yii::getAlias('@webroot','/teeeesst');


    // Open Office Calc Area
    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Kataloger'=>$model['Kataloger'], 'Kataloger1'=>$model['Kataloger1'], 'f_id'=>$model['f_id'], 'kriteria'=>$model['kriteria'], 'nama_kriteria'=>$model['nama_kriteria'], 
                        'id_record'=>$model['id_record'], 'actions'=>$model['actions'], 'title'=>$model['title'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'a'=>$a,
        'dan'=>$dan,
        'DetailFilterKriteria'=>$DetailFilterKriteria,
        'DetailFilterKataloger'=>$DetailFilterKataloger,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'kinerja_userpeminjaman'=> yii::t('app','Kinerja User Peminjaman'),
        'tanggal'=> yii::t('app','Tanggal'),
        'deskripsi'=> yii::t('app','Deskripsi'),
        'jenis_aktifitas'=> yii::t('app','Jenis Aktifitas'),
        'id_data'=> yii::t('app','ID Data'),
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-kinerja-user-peminjaman-data.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-kinerja-user-peminjaman-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordKinerjaUserPeminjamanData()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CONCAT(
                   CASE
                    WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                    WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                    WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                    WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                    ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                   END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '-->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) AS actions 
                   FROM modelhistory
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = 'Berdasarkan';
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = 'dan';
        }else{ $dan = '';} 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Peminjaman_Data.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
               <p align="center"> <b>'.yii::t('app','Laporan Detail Data').' '.$format_hari.' </b></p>
               <p align="center"> <b>'.yii::t('app','Kinerja User Peminjaman').' '.$periode2.' </b></p>
            ';
    echo '</table>';
    if ($type == 'odt') {
    echo '<table border="0" align="center" width="700"> ';
    }else{echo '<table border="1" align="center" width="700"> ';}
    echo '
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>Username / Full Name</th>
                <th>'.yii::t('app','Jenis Aktifitas').'</th>
                <th>'.yii::t('app','ID Data').'</th>
                <th>'.yii::t('app','Deskripsi').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['nama_kriteria'].'</td>
                    <td>'.$data['id_record'].'</td>
                    <td>'.$data['actions'].'</td>
                </tr>
            ';
         $no++;
        endforeach; 
    echo '</table>';

}

public function actionExportPdfKinerjaUserPeminjamanData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CONCAT(
                   CASE
                    WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                    WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                    WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                    WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                    ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                   END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '-->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) AS actions 
                   FROM modelhistory
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans' ";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = 'Berdasarkan';
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = 'dan';
        }else{ $dan = '';} 


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" />'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-kinerja-user-peminjaman-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Peminjaman_Data.pdf', 'D');

    }

public function actionRenderKinerjaUserPengembalianData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
             case '0':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di buat) ');
                break;

            case '1':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di mutakhirkan) ');
                break;

            case '2':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di hapus) ');
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CASE 
                     WHEN modelhistory.type = '0' THEN CONCAT(modelhistory.field_name, ':', modelhistory.new_value) 
                     ELSE
                    CONCAT(
                    CASE
                     WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                     WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                     WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                     WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                     ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                    END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)'))
                   END AS actions
                   FROM modelhistory 
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';} 


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" />'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginRight' => 0,
            'marginLeft' => 0,
            'content' => $this->renderPartial('pdf-view-kinerja-user-pengembalian-data', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
        ]);
        return $pdf->render();

    }

public function actionExportExcelKinerjaUserPengembalianData()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
             case '0':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di buat) ');
                break;

            case '1':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di mutakhirkan) ');
                break;

            case '2':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di hapus) ');
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi'
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CASE 
                     WHEN modelhistory.type = '0' THEN CONCAT(modelhistory.field_name, ':', modelhistory.new_value) 
                     ELSE
                    CONCAT(
                    CASE
                     WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                     WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                     WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                     WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                     ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                    END
                   , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)'))
                   END AS actions
                   FROM modelhistory 
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';} 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Kinerja User Pengembalian').' '.$periode2.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th style="vertical-align: center;">No.</th>
                <th style="vertical-align: center;">'.yii::t('app','Tanggal').'</th>
                <th style="vertical-align: center;">Username / <br /> Full name</th>
                <th style="vertical-align: center;">'.yii::t('app','Jenis Aktifitas').'</th>
                <th style="vertical-align: center;">'.yii::t('app','ID Data').'</th>
                <th style="vertical-align: center;">'.yii::t('app','Deskripsi').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: center;">'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td style="vertical-align: center;">'.$data['nama_kriteria'].'</td>
                    <td style="vertical-align: center;">'.$data['id_record'].'</td>
                    <td align="left">'.$data['actions'].'</td>
                </tr>
            ';
         $no++;
        endforeach; 
    echo '</table>';

}

public function actionExportExcelOdtKinerjaUserPengembalianData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di buat) ');
                break;

            case '1':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di mutakhirkan) ');
                break;

            case '2':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di hapus) ');
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode,
                users.UserName AS Kataloger, 
                users.Fullname AS Kataloger1, 
                modelhistory.field_id AS f_id, 
                modelhistory.type AS kriteria, 
                CASE 
                 WHEN modelhistory.type = '0' THEN 'Entri'
                 WHEN modelhistory.type = '1' THEN 'Koreksi' 
                 ELSE 'Hapus' 
                END AS nama_kriteria, 
                modelhistory.field_id AS id_record, 
                CASE 
                 WHEN modelhistory.type = '0' THEN CONCAT(modelhistory.field_name, ':', modelhistory.new_value) 
                 ELSE
                CONCAT(
                CASE
                 WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                 WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                 WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                 WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                 ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                END
                , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) 
                END AS actions
                FROM modelhistory 
                LEFT JOIN users ON modelhistory.user_id = users.ID 
                LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = 'Berdasarkan';
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = 'dan';
        }else{ $dan = '';}


    $DetailFilterKriteria = $DetailFilter['kriteria'];
    $DetailFilterKataloger = $DetailFilter['kataloger'];

    $headers = Yii::getAlias('@webroot','/teeeesst');


    // Open Office Calc Area
    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Kataloger'=>$model['Kataloger'], 'Kataloger1'=>$model['Kataloger1'], 'f_id'=>$model['f_id'], 'kriteria'=>$model['kriteria'], 'nama_kriteria'=>$model['nama_kriteria'], 
                        'id_record'=>$model['id_record'], 'actions'=>$model['actions'], 'title'=>$model['title'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'a'=>$a,
        'dan'=>$dan,
        'DetailFilterKriteria'=>$DetailFilterKriteria,
        'DetailFilterKataloger'=>$DetailFilterKataloger,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'kinerja_userpengembalian'=> yii::t('app','Kinerja User Pengembalian'),
        'tanggal'=> yii::t('app','Tanggal'),
        'deskripsi'=> yii::t('app','Deskripsi'),
        'jenis_aktifitas'=> yii::t('app','Jenis Aktifitas'),
        'id_data'=> yii::t('app','ID Data'),
        );


// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-kinerja-user-pengembalian-data.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-kinerja-user-pengembalian-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordKinerjaUserPengembalianData()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di buat) ');
                break;

            case '1':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di mutakhirkan) ');
                break;

            case '2':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di hapus) ');
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi' 
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN CONCAT(modelhistory.field_name, ':', modelhistory.new_value) 
                    ELSE
                    CONCAT(
                    CASE
                     WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                     WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                     WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                     WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                     ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                    END
                    , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) 
                   END AS actions
                   FROM modelhistory 
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';} 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
               <p align="center"> <b>'.yii::t('app','Laporan Detail Data').' '.$format_hari.' </b></p>
               <p align="center"> <b>'.yii::t('app','Kinerja User Pengembalian').' '.$periode2.' </b></p>
            ';
    echo '</table>';
    if ($type == 'odt') {
    echo '<table border="0" align="center" width="700"> ';
    }else{echo '<table border="1" align="center" width="700"> ';}
    echo '
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>Username / Full Name</th>
                <th>'.yii::t('app','Jenis Aktifitas').'</th>
                <th>'.yii::t('app','ID Data').'</th>
                <th>'.yii::t('app','Deskripsi').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['nama_kriteria'].'</td>
                    <td>'.$data['id_record'].'</td>
                    <td>'.$data['actions'].'</td>
                </tr>
            ';
         $no++;
        endforeach; 
    echo '</table>';

}

public function actionExportPdfKinerjaUserPengembalianData()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                // $dateObj = DateTime::createFromFormat('!m', $_POST['fromBulan']);
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND modelhistory.user_id  = '".$value."' ";
                    $DetailFilter['kataloger'] = "Kataloger "; 
                    }else{
                        $DetailFilter['kataloger'] = null;
                    }
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                if ($value != "" ) {
                    $andValue .= " AND modelhistory.type = '".$value."' ";
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di buat) ');
                break;

            case '1':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di mutakhirkan) ');
                break;

            case '2':
                $DetailFilter['kriteria'] = yii::t('app',' (Kriteria di hapus) ');
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT DATE_FORMAT(modelhistory.date,'%d-%M-%Y %h:%i:%s') Periode, 
                   CONCAT(users.UserName, ' / <br />', users.Fullname) AS Kataloger, 
                   modelhistory.field_id AS f_id, modelhistory.type AS kriteria, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN 'Entri'
                    WHEN modelhistory.type = '1' THEN 'Koreksi' 
                    ELSE 'Hapus' 
                   END AS nama_kriteria, 
                   modelhistory.field_id AS id_record, 
                   CASE 
                    WHEN modelhistory.type = '0' THEN CONCAT(modelhistory.field_name, ':', modelhistory.new_value) 
                    ELSE
                    CONCAT(
                    CASE
                     WHEN modelhistory.field_name = 'PublishYear' THEN REPLACE(modelhistory.field_name,'PublishYear','Tahun Terbit')
                     WHEN modelhistory.field_name = 'Title' THEN REPLACE(modelhistory.field_name,'Title','Judul')
                     WHEN modelhistory.field_name = 'Publisher' THEN REPLACE(modelhistory.field_name,'Publisher','Penerbit')
                     WHEN modelhistory.field_name = 'PhysicalDescription' THEN REPLACE(modelhistory.field_name,'PhysicalDescription','Deskripsi Fisik')
                     ELSE REPLACE(modelhistory.field_name,'PublishLocation','Tempat Terbit')
                    END
                    , ':', IFNULL(REPLACE(modelhistory.old_value, '   ',' '),'(kosong)'), '->', IFNULL(LTRIM(modelhistory.new_value), '(kosong)')) 
                   END AS actions
                   FROM modelhistory 
                   LEFT JOIN users ON modelhistory.user_id = users.ID 
                   LEFT JOIN catalogs ON catalogs.ID = modelhistory.field_id 
                   WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloans'";
        $sql .= $andValue ." ORDER BY modelhistory.date DESC";

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';} 


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" />'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-kinerja-user-pengembalian-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }

public function actionRenderPengembalianTerlambatData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    members.FullName AS Anggota, 
                    collections.NomorBarcode AS no_barcode, 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d/%m/%Y %h:%i %p') AS tgl_pinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d/%m/%Y %h:%i %p') AS tgl_tempo,
                    DATE_FORMAT(collectionloanitems.ActualReturn,'%d/%m/%Y %h:%i %p') AS tgl_pengembalian,
                    DATEDIFF(collectionloanitems.ActualReturn, collectionloanitems.DueDate) AS terlambat,
                    (SELECT COUNT(pelanggaran.ID) FROM pelanggaran WHERE DATE(pelanggaran.CreateDate) ".$sqlPeriode. $andValue.") AS k_user
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON collectionloanitems.ID = pelanggaran.CollectionLoanItem_id
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY pelanggaran.CreateDate LIMIT 1000';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
// print_r($sql);
// die;

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['test'] = $test;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-pengembalian-terlambat-data', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
        ]);
        return $pdf->render();

    }

public function actionExportExcelPengembalianTerlambatData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    members.FullName AS Anggota, 
                    collections.NomorBarcode AS no_barcode, 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d/%m/%Y %h:%i %p') AS tgl_pinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d/%m/%Y %h:%i %p') AS tgl_tempo,
                    DATE_FORMAT(collectionloanitems.ActualReturn,'%d/%m/%Y %h:%i %p') AS tgl_pengembalian,
                    DATEDIFF(collectionloanitems.ActualReturn, collectionloanitems.DueDate) AS terlambat
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON collectionloanitems.ID = pelanggaran.CollectionLoanItem_id
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.CreateDate';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    

    $filename = 'Laporan_Periodik_Data.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="8">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Pengembalian Terlambat').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Berdasarkan').''.yii::t('app','Anggota').'  '.$test.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Anggota').'</th>
                <th>'.yii::t('app','Nomor Barcode').'</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tgl.Pengembalian').'</th>
                <th>'.yii::t('app','Hari Terlambat').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Anggota'].'</td>
                    <td>'.$data['no_barcode'].'</td>
                    <td>'.$data['tgl_pinjam'].'</td>
                    <td>'.$data['tgl_tempo'].'</td>
                    <td>'.$data['tgl_pengembalian'].'</td>
                    <td>'.$data['terlambat'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportExcelOdtPengembalianTerlambatData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    members.FullName AS Anggota, 
                    collections.NomorBarcode AS no_barcode, 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d/%m/%Y %h:%i %p') AS tgl_pinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d/%m/%Y %h:%i %p') AS tgl_tempo,
                    DATE_FORMAT(collectionloanitems.ActualReturn,'%d/%m/%Y %h:%i %p') AS tgl_pengembalian,
                    DATEDIFF(collectionloanitems.ActualReturn, collectionloanitems.DueDate) AS terlambat
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON collectionloanitems.ID = pelanggaran.CollectionLoanItem_id
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.CreateDate';


    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Anggota'=>$model['Anggota'], 'no_barcode'=>$model['no_barcode'], 'tgl_pinjam'=>$model['tgl_pinjam'], 'tgl_tempo'=>$model['tgl_tempo'], 'tgl_pengembalian'=>$model['tgl_pengembalian'], 'terlambat'=>$model['terlambat'] );
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'test' => $test,
        );
    $detail2[] = array(
        'laporan_data'=> yii::t('app','Laporan Detail Data'),
        'pengembalian_terlambat'=> yii::t('app','Pengembalian Terlambat'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'anggota'=> yii::t('app','Anggota'),
        'tanggal'=> yii::t('app','Tanggal'),
        'nomor_barcode'=> yii::t('app','Nomor Barcode'),
        'tanggal_pinjam'=> yii::t('app','Tanggal Pinjam'),
        'tanggal_jatuhtempo'=> yii::t('app','Tanggal Jatuh Tempo'),
        'Tglpengembalian'=> yii::t('app','Tgl.Pengembalian'),
        'hari_terlambat'=> yii::t('app','Hari Terlambat'),
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-pengembalian-terlambat-data.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-pengembalian-terlambat-data.ods');
    // !Open Office Calc Area


}

public function actionExportWordPengembalianTerlambatData()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    members.FullName AS Anggota, 
                    collections.NomorBarcode AS no_barcode, 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d/%m/%Y %h:%i %p') AS tgl_pinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d/%m/%Y %h:%i %p') AS tgl_tempo,
                    DATE_FORMAT(collectionloanitems.ActualReturn,'%d/%m/%Y %h:%i %p') AS tgl_pengembalian,
                    DATEDIFF(collectionloanitems.ActualReturn, collectionloanitems.DueDate) AS terlambat
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON collectionloanitems.ID = pelanggaran.CollectionLoanItem_id
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.CreateDate';

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Data.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="8">'.yii::t('app','Laporan Detail Data').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Pengembalian Terlambat').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="8">'.yii::t('app','Berdasarkan').' '.yii::t('app','Anggota').' '.$test.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Anggota').'</th>
                <th>'.yii::t('app','Nomor Barcode').'</th>
                <th>'.yii::t('app','Tanggal Pinjam').'</th>
                <th>'.yii::t('app','Tanggal Jatuh Tempo').'</th>
                <th>'.yii::t('app','Tgl.Pengembalian').'</th>
                <th>'.yii::t('app','Hari Terlambat').'</th>
            </tr>
            ';
        $no = 1;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Anggota'].'</td>
                    <td>'.$data['no_barcode'].'</td>
                    <td>'.$data['tgl_pinjam'].'</td>
                    <td>'.$data['tgl_tempo'].'</td>
                    <td>'.$data['tgl_pengembalian'].'</td>
                    <td>'.$data['terlambat'].'</td>
                </tr>
            ';
        $no++;
        endforeach;
        
    echo '</table>';

}

public function actionExportPdfPengembalianTerlambatData() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    members.FullName AS Anggota, 
                    collections.NomorBarcode AS no_barcode, 
                    DATE_FORMAT(collectionloanitems.LoanDate,'%d/%m/%Y %h:%i %p') AS tgl_pinjam,
                    DATE_FORMAT(collectionloanitems.DueDate,'%d/%m/%Y %h:%i %p') AS tgl_tempo,
                    DATE_FORMAT(collectionloanitems.ActualReturn,'%d/%m/%Y %h:%i %p') AS tgl_pengembalian,
                    DATEDIFF(collectionloanitems.ActualReturn, collectionloanitems.DueDate) AS terlambat
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON collectionloanitems.ID = pelanggaran.CollectionLoanItem_id
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $sql .= ' ORDER BY collectionloanitems.CreateDate';
        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
// print_r($sql);
// die;

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['test'] = $test;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 233; width: 100%;" >'];
            $set = 60;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-pengembalian-terlambat-data', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Data.pdf', 'D');

    }


// /////////////////////////////////batas view_data dgn view_vrekuensi//////////////////////////////////// //     
public function actionRenderLaporanPeminjamanFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================

// $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->asArray()->All();
// echo implode(',',$_POST['PublishLocation']);
// echo '<pre>';print_r(sizeof($_POST['PublishLocation']));die;
            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

// echo '<pre>';print_r($_POST['no_klas']);echo '</pre>';
// echo '<pre>';print_r($_POST['tono_klas']);echo '</pre>';die;
                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
            
            $sql = "SELECT ".$periode_format.", 
                    CONCAT(".implode(', \', \',',$Kriteria).") AS Kriteria,
                    members.FullName AS NamaAnggota, 
                    COUNT(DISTINCT collectionloanitems.`ID`) AS JumlahPeminjam, 
                    COUNT(DISTINCT catalogs.ID) AS JumlahJudul, 
                    COUNT(DISTINCT collections.ID) AS JumlahEksemplar 
                    FROM collectionloanitems 
                    INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    INNER JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN users ON users.ID = collectionloanitems.CreateBy 
                    LEFT JOIN locations ON collections.Location_Id = locations.ID
                    LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID
                    LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND
                    master_range_umur.`umur2` ";
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) ";       
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.')';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        // if(sizeof(array_filter($_POST['kriterias'])) > 1 ) 
        // {$Berdasarkan = array();
        // foreach ($_POST['kriterias'] as $key => $value) {
        //     $Berdasarkan[] .= yii::t('app',$this->getRealNameKriteria($value)).' ';
        // }
        // $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);} 
        // else
        // {$Berdasarkan = array();
        // foreach ($_POST['kriterias'] as $key => $value) {
        //     $Berdasarkan[] .= yii::t('app',$this->getRealNameKriteria($value)).' ';
        // }
        // $Berdasarkan = implode($Berdasarkan);}

        $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

            // echo"<pre>";
            // print_r($VALUE);
            // // print_r($VALUE);
            // // print_r($Berdasarkan);
            // echo"</pre>";
            // die;

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-laporan-peminjaman-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelLaporanPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            } 
            
            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }
            
            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            } 
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================



            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            // if (isset($_POST['Publisher'])) {
            // foreach ($_POST['Publisher'] as $key => $value) {
            //     if ($value != "0" ) {
            //          $Plocation = Catalogs::findOne(['ID' => $value]);
            //         $andValue .= " AND catalogs.Publisher LIKE '".$Plocation->Publisher."' ";
            //         }
            //     }
            // }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }

            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            }

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            }

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                    foreach ($_POST['no_klas'] as $key => $value) {                        
                            foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                                if ($value == "" || $tovalue == "" ) {
                                    $andValue .= '';
                                    $groupValue['no_klas'] = '---semua---';
                                    $VALUE['no_klas'] = $groupValue;
                                    }
                                else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                        $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                        $groupValue['no_klas'] = 'Lainnya';
                                        $VALUE['no_klas'] = $groupValue;
                                    }
                                else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                        $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                        $groupValue['no_klas'] = 'Lainnya';
                                        $VALUE['no_klas'] = $groupValue;
                                    }
                                else if ($value == "XI" || $tovalue == "XI") {
                                        $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                        $groupValue['no_klas'] = 'Lainnya';
                                        $VALUE['no_klas'] = $groupValue;
                                    }
                                else{
                                        $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                        $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                        $VALUE['no_klas'] = $groupValue;
                                }
                            }
                    $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                    $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                        }
                    } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }
            
            $sql = "SELECT ".$periode_format.", 
                    CONCAT(".implode(', \', \',',$Kriteria).") AS Kriteria,
                    members.FullName AS NamaAnggota, 
                    COUNT(DISTINCT collectionloanitems.`ID`) AS JumlahPeminjam, 
                    COUNT(DISTINCT catalogs.ID) AS JumlahJudul, 
                    COUNT(DISTINCT collections.ID) AS JumlahEksemplar 
                    FROM collectionloanitems 
                    INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    INNER JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN users ON users.ID = collectionloanitems.CreateBy 
                    LEFT JOIN locations ON collections.Location_Id = locations.ID
                    LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID
                    LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND
                    master_range_umur.`umur2` ";
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) ";       
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.')';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Sirkulasi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'Periode</th>
                <th>'.yii::t('app','Kriteria').'</th>
                <th>'.yii::t('app','Jumlah Peminjaman').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        $JumlahPeminjam = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kriteria'].'</td>
                    <td>'.$data['JumlahPeminjam'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $JumlahPeminjam = $JumlahPeminjam + $data['JumlahPeminjam'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahPeminjam.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtLaporanPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================

            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }    
            $sql = "SELECT ".$periode_format.", 
                    CONCAT(".implode(', \', \',',$Kriteria).") AS Kriteria, 
                    COUNT(DISTINCT collectionloanitems.`ID`) AS JumlahPeminjam, 
                    COUNT(DISTINCT catalogs.ID) AS JumlahJudul, 
                    COUNT(DISTINCT collections.ID) AS JumlahEksemplar 
                    FROM collectionloanitems 
                    INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    INNER JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN users ON users.ID = collectionloanitems.CreateBy 
                    LEFT JOIN locations ON collections.Location_Id = locations.ID
                    LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID
                    LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND
                    master_range_umur.`umur2` ";
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) ";       
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.')';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
    foreach ($VALUE as $key => $value) {
        $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
    }
    $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');


    // Open Office Calc Area
    $menu = 'Pemanfaatan Opac';

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Kriteria'=>$model['Kriteria'], 'JumlahJudul'=>$model['JumlahJudul'], 'JumlahEksemplar'=>$model['JumlahEksemplar'], 'JumlahPeminjam'=>$model['JumlahPeminjam'] );
            $JumlahJudul = $JumlahJudul + $model['JumlahJudul'];
            $JumlahEksemplar = $JumlahEksemplar + $model['JumlahEksemplar'];
            $JumlahPeminjam = $JumlahPeminjam + $model['JumlahPeminjam'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlahJudul'=>$JumlahJudul,
        'TotalJumlahEksemplar'=>$JumlahEksemplar,
        'TotalJumlahPeminjam'=>$JumlahPeminjam,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'sirkulasi_peminjaman'=> yii::t('app','Sirkulasi Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal'=> yii::t('app','Tanggal'),
        'kriteria'=> yii::t('app','Kriteria'),
        'jumlah_peminjaman'=> yii::t('app','Jumlah Peminjaman'),
        'jumlah_judul'=> yii::t('app','Jumlah Judul'),
        'jumlah_eksemplar'=> yii::t('app','Jumlah Eksemplar'),
        
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-laporan-peminjaman-frekuensi.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-Sirkulasi-Peminjaman-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordLaporanPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }   
            $sql = "SELECT ".$periode_format.", 
                    CONCAT(".implode(', \', \',',$Kriteria).") AS Kriteria,
                    COUNT(DISTINCT collectionloanitems.`ID`) AS JumlahPeminjam, 
                    COUNT(DISTINCT catalogs.ID) AS JumlahJudul, 
                    COUNT(DISTINCT collections.ID) AS JumlahEksemplar 
                    FROM collectionloanitems 
                    INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    INNER JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN users ON users.ID = collectionloanitems.CreateBy 
                    LEFT JOIN locations ON collections.Location_Id = locations.ID
                    LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID
                    LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND
                    master_range_umur.`umur2` ";
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) ";       
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.')';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
    foreach ($VALUE as $key => $value) {
        $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
    }
    $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Sirkulasi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-left: 10px; margin-right: 10px;">
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Kriteria').'</th>
                <th>'.yii::t('app','Jumlah Peminjaman').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        $JumlahPeminjam = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kriteria'].'</td>
                    <td>'.$data['JumlahPeminjam'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $JumlahPeminjam = $JumlahPeminjam + $data['JumlahPeminjam'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahPeminjam.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfLaporanPeminjamanFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= " AND members.CreateBy = '".addslashes($value)."' ";
                    }
                }
            }

            if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['no_anggota'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['no_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['MemberNo'];
                        }
                    $VALUE['no_anggota'] = $groupValue;
                    }else{$VALUE['no_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.MemberNo';    
            }
            
            if (isset($_POST['range_umur'])) {
            foreach ($_POST['range_umur'] as $key => $value) {
                if ($value != "0" ) {
                    $umur = MasterRangeUmur::findOne(['id' => $value]);
                    $test = MasterRangeUmur::find()->where(['in', 'id', $_POST['range_umur']])->asArray()->All();
                    $nilaiAndValue[] = 'umur(members.DateOfBirth) BETWEEN "'.$umur->umur1.'" AND "'.$umur->umur2.'" ';
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Keterangan'];
                        }
                    $VALUE['range_umur'] = $groupValue;
                    }else{$VALUE['range_umur'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'master_range_umur.Keterangan';    
            }

            if (isset($_POST['jenis_kelamin'])) {
            foreach ($_POST['jenis_kelamin'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_kelamin'])) {
                    $test = JenisKelamin::find()->where(['in', 'ID', $_POST['jenis_kelamin']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['jenis_kelamin'] = $groupValue;
                    }else{$VALUE['jenis_kelamin'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collectionloanitems.member_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_kelamin.Name';    
            }

            if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_anggota'])) {
                    $test = JenisAnggota::find()->where(['in', 'jenisanggota', $_POST['jenis_anggota']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['jenisanggota'];
                        }
                    $VALUE['jenis_anggota'] = $groupValue;
                    }else{$VALUE['jenis_anggota'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND jenis_anggota.jenisanggota IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'jenis_anggota.jenisanggota';    
            $subjek .= 'LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID ';
            }

            if (isset($_POST['Pekerjaan'])) {
            foreach ($_POST['Pekerjaan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pekerjaan'])) {
                    $test = MasterPekerjaan::find()->where(['in', 'Pekerjaan', $_POST['Pekerjaan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Pekerjaan'];
                        }
                    $VALUE['Pekerjaan'] = $groupValue;
                    }else{$VALUE['Pekerjaan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pekerjaan.Pekerjaan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pekerjaan.Pekerjaan';    
            $subjek .= 'LEFT JOIN master_pekerjaan ON members.Job_id = master_pekerjaan.ID ';
            }

            if (isset($_POST['Pendidikan'])) {
            foreach ($_POST['Pendidikan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Pendidikan'])) {
                    $test = MasterPendidikan::find()->where(['in', 'Nama', $_POST['Pendidikan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Pendidikan'] = $groupValue;
                    }else{$VALUE['Pendidikan'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_pendidikan.Nama IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_pendidikan.Nama';    
            $subjek .= 'LEFT JOIN master_pendidikan ON members.EducationLevel_id = master_pendidikan.ID ';
            }

            if (isset($_POST['Fakultas_id'])) {
            foreach ($_POST['Fakultas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Fakultas_id'])) {
                    $test = MasterFakultas::find()->where(['in', 'id', $_POST['Fakultas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Fakultas_id'] = $groupValue;
                    }else{$VALUE['Fakultas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_fakultas.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_fakultas.Nama';    
            $subjek .= ' INNER JOIN master_fakultas on master_fakultas.id = members.Fakultas_id ';
            }

            if (isset($_POST['Jurusan_id'])) {
            foreach ($_POST['Jurusan_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Jurusan_id'])) {
                    $test = MasterJurusan::find()->where(['in', 'id', $_POST['Jurusan_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['Jurusan_id'] = $groupValue;
                    }else{$VALUE['Jurusan_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_jurusan.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jurusan.Nama';    
            $subjek .= ' INNER JOIN master_jurusan on master_jurusan.id = members.Jurusan_id ';
            }

            if (isset($_POST['program_studi_id'])) {
            foreach ($_POST['program_studi_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['program_studi_id'])) {
                    $test = MasterProgramStudi::find()->where(['in', 'id', $_POST['program_studi_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['program_studi_id'] = $groupValue;
                    }else{$VALUE['program_studi_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND master_program_studi.id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_program_studi.Nama';    
            $subjek .= ' INNER JOIN master_program_studi on master_program_studi.id = members.ProgramStudi_id ';
            }

            if (isset($_POST['Kelas_id'])) {
            foreach ($_POST['Kelas_id'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['Kelas_id'])) {
                    $test = KelasSiswa::find()->where(['in', 'namakelassiswa', $_POST['Kelas_id']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['namakelassiswa'];
                        }
                    $VALUE['Kelas_id'] = $groupValue;
                    }else{$VALUE['Kelas_id'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND kelas_siswa.namakelassiswa IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'kelas_siswa.namakelassiswa';    
            $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['unit_kerja'])) {
            foreach ($_POST['unit_kerja'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['unit_kerja'])) {
                    $test = Departments::find()->where(['in', 'ID', $_POST['unit_kerja']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['unit_kerja'] = $groupValue;
                    }else{$VALUE['unit_kerja'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.UnitKerja_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'departments.Name';    
            $subjek .= 'LEFT JOIN departments ON members.UnitKerja_id = departments.ID ';
            }
            
            if (isset($_POST['jenis_identitas'])) {
            foreach ($_POST['jenis_identitas'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['jenis_identitas'])) {
                    $test = MasterJenisIdentitas::find()->where(['in', 'id', $_POST['jenis_identitas']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Nama'];
                        }
                    $VALUE['jenis_identitas'] = $groupValue;
                    }else{$VALUE['jenis_identitas'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.IdentityType_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'master_jenis_identitas.Nama';    
            $subjek .= 'LEFT JOIN master_jenis_identitas ON members.IdentityType_id = master_jenis_identitas.ID ';
            }

            if (isset($_POST['propinsi'])) {
            foreach ($_POST['propinsi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi'] = $groupValue;
                    }else{$VALUE['propinsi'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten'])) {
            foreach ($_POST['kabupaten'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten'] = $groupValue;
                    }else{$VALUE['kabupaten'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }

            if (isset($_POST['kecamatan'])) {
            foreach ($_POST['kecamatan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kecamatan'])) {
                    $test = Members::find()->where(['in', 'Kecamatan', $_POST['kecamatan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kecamatan'];
                        }
                    if ($value == "XI" ){$VALUE['kecamatan'] = array('Kosong');} else {$VALUE['kecamatan'] = $groupValue;}
                    }else{$VALUE['kecamatan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kecamatan IS NULL OR members.Kecamatan = '')";} elseif ($value != "") { $andValue .= " AND members.Kecamatan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kecamatan';    
            }

            if (isset($_POST['kelurahan'])) {
            foreach ($_POST['kelurahan'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['kelurahan'])) {
                    $test = Members::find()->where(['in', 'Kelurahan', $_POST['kelurahan']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Kelurahan'];
                        }
                    if ($value == "XI" ){$VALUE['kelurahan'] = array('Kosong');} else {$VALUE['kelurahan'] = $groupValue;}
                    }else{$VALUE['kelurahan'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.Kelurahan IS NULL OR members.Kelurahan = '')";} elseif ($value != "") { $andValue .= " AND members.Kelurahan IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Kelurahan';    
            }
            
            if (isset($_POST['propinsi2'])) {
            foreach ($_POST['propinsi2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['propinsi2'])) {
                    $test = Propinsi::find()->where(['in', 'NamaPropinsi', $_POST['propinsi2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaPropinsi'];
                        }
                    $VALUE['propinsi2'] = $groupValue;
                    }else{$VALUE['propinsi2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.Province IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.Province';    
            }

            if (isset($_POST['kabupaten2'])) {
            foreach ($_POST['kabupaten2'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['kabupaten2'])) {
                    $test = Kabupaten::find()->where(['in', 'NamaKab', $_POST['kabupaten2']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['NamaKab'];
                        }
                    $VALUE['kabupaten2'] = $groupValue;
                    }else{$VALUE['kabupaten2'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND members.City IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.City';    
            }
            
            if (isset($_POST['nama_institusi'])) {
            foreach ($_POST['nama_institusi'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['nama_institusi'])) {
                    $test = Members::find()->where(['in', 'ID', $_POST['nama_institusi']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['InstitutionName'];
                        }
                    if ($value == "XI" ){$VALUE['nama_institusi'] = array('Kosong');} else {$VALUE['nama_institusi'] = $groupValue;}
                    }else{$VALUE['nama_institusi'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (members.InstitutionName IS NULL OR members.InstitutionName = '')";} elseif ($value != "") { $andValue .= " AND members.InstitutionName IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'members.InstitutionName';    
            }

            if (isset($_POST['lokasi_pinjam'])) {
            foreach ($_POST['lokasi_pinjam'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('',$_POST['lokasi_pinjam'])) {
                    $test = LocationLibrary::find()->where(['in', 'ID', $_POST['lokasi_pinjam']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    if ($value == "XI" ){$VALUE['lokasi_pinjam'] = array('Kosong');} else {$VALUE['lokasi_pinjam'] = $groupValue;}
                    }else{$VALUE['lokasi_pinjam'] = array('Semua');}
                }
             if ($value == "XI" ) { $andValue .= " AND (collectionloans.LocationLibrary_id IS NULL OR collectionloans.LocationLibrary_id = '')";} elseif ($value != "") { $andValue .= " AND collectionloans.LocationLibrary_id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'location_library.Name';    
            $subjek .= ' LEFT JOIN collectionloans ON collectionloans.ID = collectionloanitems.CollectionLoan_id ';
            $subjek .= ' LEFT JOIN location_library ON location_library.ID = collectionloans.LocationLibrary_id ';
            }
    // ======================================== kriteria koleksi dipinjam =========================================


            if (isset($_POST['PublishLocation'])) {
            foreach ($_POST['PublishLocation'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.PublishLocation LIKE'%".$value."%'";
                if (!in_array('0',$_POST['PublishLocation'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishLocation', $_POST['PublishLocation']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['PublishLocation']);
                    $VALUE['PublishLocation'] = $groupValue;
                    }else{$VALUE['PublishLocation'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishLocation';    
            }

            if (isset($_POST['Publisher'])) {
            foreach ($_POST['Publisher'] as $key => $value) {
                $nilaiAndValue[] = " catalogs.Publisher LIKE'%".$value."%'";
                if (!in_array('0',$_POST['Publisher'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Publisher', $_POST['Publisher']])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$_POST['Publisher']);
                    $VALUE['Publisher'] = $groupValue;
                    }else{$VALUE['Publisher'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Publisher';    
            }
            
            if (isset($_POST['PublishYear'])) {
            foreach ($_POST['PublishYear'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.PublishYear LIKE'%".$Plocation->PublishYear."%'";
                $Value2[] .= $Plocation->PublishYear;
                if (!in_array('0',$_POST['PublishYear'])) {
                    $test = Catalogs::find()->where(['LIKE', 'PublishYear', $Plocation->PublishYear])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['PublishYear'] = $groupValue;
                    }else{$VALUE['PublishYear'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.PublishYear';    
            }

            if (isset($_POST['locations'])) {
            foreach ($_POST['locations'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['locations'])) {
                    $test = Locations::find()->where(['in', 'ID', $_POST['locations']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['locations'] = $groupValue;
                    }else{$VALUE['locations'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND locations.ID IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'locations.Name';    
            // $subjek .= ' INNER JOIN kelas_siswa on kelas_siswa.id = members.Kelas_id ';
            }

            if (isset($_POST['collectionsources'])) {
            foreach ($_POST['collectionsources'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionsources'])) {
                    $test = Collectionsources::find()->where(['in', 'ID', $_POST['collectionsources']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionsources'] = $groupValue;
                    }else{$VALUE['collectionsources'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Source_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionsources.Name';    
            $subjek .= ' Left JOIN collectionsources on collectionsources.ID = collections.Source_Id ';
            }

            if (isset($_POST['partners'])) {
            foreach ($_POST['partners'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['partners'])) {
                    $test = Partners::find()->where(['in', 'ID', $_POST['partners']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['partners'] = $groupValue;
                    }else{$VALUE['partners'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Partner_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'partners.Name';    
            $subjek .= ' Left JOIN partners on partners.ID = collections.Partner_Id ';
            }

            if (isset($_POST['currency'])) {
            foreach ($_POST['currency'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['currency'])) {
                    $test = Currency::find()->where(['in', 'Currency', $_POST['currency']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Currency'];
                        }
                    $VALUE['currency'] = $groupValue;
                    }else{$VALUE['currency'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Currency IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'currency.Currency';    
            $subjek .= ' INNER JOIN currency ON collections.Currency = currency.Currency ';
            } 

                if (isset($_POST['harga'])) {
                    foreach ($_POST['harga'] as $key => $value) {
                        foreach ($_POST['toharga'] as $key => $toValue) {
                            $groupValue['harga'] = $value.' - '.$toValue;
                            $VALUE['harga'] = $groupValue;
                            if ($value != "" ) {
                                $andValue .= " AND collections.Price BETWEEN '".addslashes($value)."' ";
                                $andValue .= " AND '".addslashes($toValue)."' ";
                            }
                        }
                    }   
                } 
                if (isset($_POST['toharga'])) {

                    $Kriteria[] = 'collections.Price';    
                    
                }

            if (isset($_POST['collectioncategorys'])) {
            foreach ($_POST['collectioncategorys'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectioncategorys'])) {
                    $test = Collectioncategorys::find()->where(['in', 'ID', $_POST['collectioncategorys']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectioncategorys'] = $groupValue;
                    }else{$VALUE['collectioncategorys'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Category_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectioncategorys.Name';    
            $subjek .= ' INNER JOIN collectioncategorys ON collections.Category_Id = collectioncategorys.ID ';
            } 

            if (isset($_POST['collectionrules'])) {
            foreach ($_POST['collectionrules'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionrules'])) {
                    $test = Collectionrules::find()->where(['in', 'ID', $_POST['collectionrules']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionrules'] = $groupValue;
                    }else{$VALUE['collectionrules'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Rule_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionrules.Name';    
            $subjek .= ' INNER JOIN collectionrules ON collections.Rule_Id = collectionrules.ID ';
            }   

            if (isset($_POST['worksheets'])) {
            foreach ($_POST['worksheets'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['worksheets'])) {
                    $test = Worksheets::find()->where(['in', 'ID', $_POST['worksheets']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['worksheets'] = $groupValue;
                    }else{$VALUE['worksheets'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND catalogs.Worksheet_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'worksheets.Name';    
            $subjek .= ' INNER JOIN worksheets ON catalogs.Worksheet_Id = worksheets.ID ';
            } 

            if (isset($_POST['collectionmedias'])) {
            foreach ($_POST['collectionmedias'] as $key => $value) {
                $Value[] .= "'".$value."'";
                if (!in_array('0',$_POST['collectionmedias'])) {
                    $test = Collectionmedias::find()->where(['in', 'ID', $_POST['collectionmedias']])->asArray()->All();
                    $groupValue = array();
                        foreach ($test as $t => $tval) {
                            $groupValue[$t] = $tval['Name'];
                        }
                    $VALUE['collectionmedias'] = $groupValue;
                    }else{$VALUE['collectionmedias'] = array('Semua');}
                }
             if ($value != "0" ) { $andValue .= " AND collections.Media_Id IN (".implode(',',$Value).") ";}
            $Kriteria[] = 'collectionmedias.Name';    
            $subjek .= ' INNER JOIN collectionmedias ON collections.Media_Id = collectionmedias.ID ';
            } 

            if (isset($_POST['Subject'])) {
            foreach ($_POST['Subject'] as $key => $value) {
                $Plocation = Catalogs::findOne(['ID' => $value]);
                $nilaiAndValue[] = " catalogs.Subject LIKE'%".$Plocation->Subject."%'";
                $Value2[] .= $Plocation->Subject;
                if (!in_array('0',$_POST['Subject'])) {
                    $test = Catalogs::find()->where(['LIKE', 'Subject', $Plocation->Subject])->limit(1)->asArray()->All();
                     $groupValue = array();
                     $groupValue[$t] = implode("','",$Value2);
                    $VALUE['Subject'] = $groupValue;
                    }else{$VALUE['Subject'] = array('Semua');}
                }if ($value != "0" ) {$andValue .= ' AND '.implode('OR ',$nilaiAndValue);}
            $Kriteria[] = 'catalogs.Subject';    
            }   

                if (isset($_POST['no_klas'])) {
                foreach ($_POST['no_klas'] as $key => $value) {                        
                        foreach ($_POST['tono_klas'] as $key => $tovalue) {                        
                            if ($value == "" || $tovalue == "" ) {
                                $andValue .= '';
                                $groupValue['no_klas'] = '---semua---';
                                $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" && $tovalue != "XI" && $tovalue != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($tovalue,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($tovalue == "XI" && $value != "XI" && $value != "") {
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) >= "'.substr($value,0,1).'" OR (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL)) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else if ($value == "XI" || $tovalue == "XI") {
                                    $andValue .= ' AND (SUBSTRING(catalogs.DeweyNo,1,1) NOT REGEXP "^-?[0-9]+$" OR catalogs.DeweyNo IS NULL) ';
                                    $groupValue['no_klas'] = 'Lainnya';
                                    $VALUE['no_klas'] = $groupValue;
                                }
                            else{
                                    $andValue .= ' AND (SUBSTR(catalogs.DeweyNo,1,1) BETWEEN '.substr($value,0,1).' AND '.substr($tovalue,0,1).' AND SUBSTRING(catalogs.DeweyNo,1,1) REGEXP "^-?[0-9]+$") ';
                                    $groupValue['no_klas'] = $value.'00'.' - '.$tovalue.'00';
                                    $VALUE['no_klas'] = $groupValue;
                            }
                        }
                $subjek .= 'LEFT JOIN master_kelas_besar ON SUBSTR(catalogs.DeweyNo,1,1) = SUBSTR(master_kelas_besar.kdKelas,1,1) ';
                $Kriteria[] = 'IFNULL(master_kelas_besar.namakelas,"Lainnya")';
                    }
                } 

        if (isset($_POST['no_panggil'])) {  
        echo '<pre>';print_r($_POST['inino_panggil']);
            if (sizeof($_POST['inino_panggil']) > 1) {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    $groupValue = array();
                    $andValue = '';
                    foreach ($_POST['inino_panggil'] as $Ivalue) {
                        switch ($Ivalue) {
                        case 'dimulai_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'dimulai dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'salah_satu_isi':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                            $groupValue['no_klas'] .= 'salah satu isi= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'tepat':
                            $andValue = " AND catalogs.CallNumber = '".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'tepat= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        case 'diakhiri_dengan':
                            $andValue = " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                            $groupValue['no_klas'] .= 'diakhiri dengan= '. $value.' ';
                            $VALUE['no_panggil'] = $groupValue;
                            break;
                        default:
                            $VALUE['no_panggil'] = null;
                            break;
                        }
                    }
                }
            } 
            if (implode($_POST['inino_panggil']) == 'dimulai_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $groupValue['no_klas'] = 'dimulai dengan= '. $value;
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            } 
            if (implode($_POST['inino_panggil']) == 'salah_satu_isi') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."%' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'tepat') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber = '".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            if (implode($_POST['inino_panggil']) == 'diakhiri_dengan') {
                foreach ($_POST['no_panggil'] as $key => $value) {
                    if ($value != "" ) {
                        $andValue .= " AND catalogs.CallNumber LIKE '%".addslashes($value)."' ";
                    }else{
                        $andValue .= "";
                    }
                    $VALUE['no_panggil'] = $_POST['no_panggil'];
                }
            }
            $Kriteria[] = 'catalogs.CallNumber';
        }

        $inValue = array();
        if (isset($_POST['belum_kembali']) == true) {
                
                    $inValue[] =  "'Loan'";
                
            }    
        if (isset($_POST['sudah_kembali']) == true) {
                
                    $inValue[]=  "'Return'";
                
            }        
        $endValue = array();
        if (isset($_POST['belum_tgl_jatuh']) == true) {
                
                    $endValue[] =  '>=';
                
            }
        if (isset($_POST['sudah_tgl_jatuh']) == true) {
                
                    $endValue[] =  '<';
                
            }  

            $sql = "SELECT ".$periode_format.", 
                    CONCAT(".implode(', \', \',',$Kriteria).") AS Kriteria,
                    COUNT(DISTINCT collectionloanitems.`ID`) AS JumlahPeminjam, 
                    COUNT(DISTINCT catalogs.ID) AS JumlahJudul, 
                    COUNT(DISTINCT collections.ID) AS JumlahEksemplar 
                    FROM collectionloanitems 
                    INNER JOIN collections ON collections.ID = collectionloanitems.Collection_id 
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id 
                    INNER JOIN members ON members.ID = collectionloanitems.member_id 
                    LEFT JOIN users ON users.ID = collectionloanitems.CreateBy 
                    LEFT JOIN locations ON collections.Location_Id = locations.ID
                    LEFT JOIN jenis_kelamin ON members.Sex_id = jenis_kelamin.ID
                    LEFT JOIN master_range_umur ON umur(members.DateOfBirth) BETWEEN master_range_umur.`umur1` AND
                    master_range_umur.`umur2` ";
            $sql .= $subjek;
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) ";       
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        $inValue = implode(',',$inValue);
        if($inValue != ''){
        $sql .= 'AND collectionloanitems.LoanStatus IN ('.$inValue.')';
        }
        $endValuex = sizeof($endValue);
        if($endValuex == 1){
        $endValue = implode($endValue);
        $sql .= ' AND IFNULL(DATEDIFF(collectionloanitems.DueDate,collectionloanitems.ActualReturn),"0") '.$endValue.' 0';
        }
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate),Kriteria ORDER BY DATE_FORMAT(collectionloanitems.LoanDate,'%Y-%m-%d') ASC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $Berdasarkan = array();
        foreach ($VALUE as $key => $value) {
            $Berdasarkan[] .= $this->getRealNameKriteria($key).' (\''.implode(yii::t('app',' , '), $value).'\')';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        // if (count($_POST['kriterias']) == 1 && implode($_POST[implode($_POST['kriterias'])]) !== "0") {
         
        //     $Berdasarkan .= ' (' .implode($_POST[implode($_POST['kriterias'])]). ')';
        // }

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-laporan-peminjaman-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }

public function actionRenderPerpanjanganPeminjamanFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['Petugas_perpanjangan'])) {
        foreach ($_POST['Petugas_perpanjangan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT ".$periode_format.", 
                COUNT(*) AS JumlahEksemplar, 
                '' AS Kriteria, 
                COUNT(DISTINCT collections.Catalog_ID) AS JumlahJudul 
                FROM collectionloanextends  
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID  
                INNER JOIN members ON collectionloanextends.Member_Id = members.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanextends.DateExtend,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-perpanjangan-peminjaman-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Halaman {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();
        
    }

public function actionExportExcelPerpanjanganPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['Petugas_perpanjangan'])) {
        foreach ($_POST['Petugas_perpanjangan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT ".$periode_format.", 
                COUNT(*) AS JumlahEksemplar, 
                '' AS Kriteria, 
                COUNT(DISTINCT collections.Catalog_ID) AS JumlahJudul 
                FROM collectionloanextends  
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID  
                INNER JOIN members ON collectionloanextends.Member_Id = members.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanextends.DateExtend,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="5">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Transaksi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtPerpanjanganPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['Petugas_perpanjangan'])) {
        foreach ($_POST['Petugas_perpanjangan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT ".$periode_format.", 
                COUNT(*) AS JumlahEksemplar, 
                '' AS Kriteria, 
                COUNT(DISTINCT collections.Catalog_ID) AS JumlahJudul 
                FROM collectionloanextends  
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID  
                INNER JOIN members ON collectionloanextends.Member_Id = members.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanextends.DateExtend,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'JumlahEksemplar'=>$model['JumlahEksemplar'], 'JumlahJudul'=>$model['JumlahJudul'] );
            $JumlahEksemplar = $JumlahEksemplar + $model['JumlahEksemplar'];
            $JumlahJudul = $JumlahJudul + $model['JumlahJudul'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlahEksemplar'=>$JumlahEksemplar,
        'TotalJumlahJudul'=>$JumlahJudul,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'transaksi_peminjaman'=> yii::t('app','Transaksi Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal'=> yii::t('app','Tanggal'),
        'jumlah_judul'=> yii::t('app','Jumlah Judul'),
        'jumlah_eksemplar'=> yii::t('app','Jumlah Eksemplar'),
    
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-perpanjangan-peminjaman-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-perpanjangan-peminjaman-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordPerpanjanganPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['Petugas_perpanjangan'])) {
        foreach ($_POST['Petugas_perpanjangan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT ".$periode_format.", 
                COUNT(*) AS JumlahEksemplar, 
                '' AS Kriteria, 
                COUNT(DISTINCT collections.Catalog_ID) AS JumlahJudul 
                FROM collectionloanextends  
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID  
                INNER JOIN members ON collectionloanextends.Member_Id = members.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanextends.DateExtend,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="4">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="4">'.yii::t('app','Transaksi Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="4">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-left: 20px; margin-right: 20px; ">
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfPerpanjanganPeminjamanFrekuensi()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanextends.DateExtend,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
        foreach ($_POST['no_anggota'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.Member_Id  =  '".$value."' ";
                }
            }
        }

        if (isset($_POST['Petugas_perpanjangan'])) {
        foreach ($_POST['Petugas_perpanjangan'] as $key => $value) {
            if ($value != "0" ) {
                $andValue .= " AND collectionloanextends.CreateBy  =  '".$value."' ";
                }
            }
        }  

        $sql = "SELECT ".$periode_format.", 
                COUNT(*) AS JumlahEksemplar, 
                '' AS Kriteria, 
                COUNT(DISTINCT collections.Catalog_ID) AS JumlahJudul 
                FROM collectionloanextends  
                INNER JOIN collections ON collectionloanextends.Collection_id = collections.ID  
                INNER JOIN members ON collectionloanextends.Member_Id = members.ID 
                WHERE DATE(collectionloanextends.DateExtend) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanextends.DateExtend,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanextends.DateExtend) ORDER BY DATE_FORMAT(collectionloanextends.DateExtend,'%Y-%m-%d') DESC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-perpanjangan-peminjaman-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');
        
    }


public function actionRenderSangsiPelanggaranPeminjamanFrekuensi() 
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
            $sql = "SELECT ".$periode_format.",
                    COUNT(*) AS JumlahEksemplar, 
                    '' AS Kriteria, 
                    COUNT(DISTINCT Collections.Catalog_ID) AS JumlahJudul, 
                    SUM(pelanggaran.JumlahDenda) AS total_uang, 
                    SUM(pelanggaran.JumlahSuspend) AS total_skorsing 
                    FROM pelanggaran  
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                }


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
        
        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-sangsi-pelanggaran-peminjaman-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelSangsiPelanggaranPeminjamanFrekuensi()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

// var_dump($periode_format);
// die;

        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

                $sql = "SELECT ".$periode_format.",
                    COUNT(*) AS JumlahEksemplar, 
                    '' AS Kriteria, 
                    COUNT(DISTINCT Collections.Catalog_ID) AS JumlahJudul, 
                    SUM(pelanggaran.JumlahDenda) AS total_uang, 
                    SUM(pelanggaran.JumlahSuspend) AS total_skorsing 
                    FROM pelanggaran  
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";

            $sql .= $sqlPeriode;
            $sql .= $andValue;
            if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Sangsi Pelanggaran Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Peminjaman').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
                <th>'.yii::t('app','Total Uang').'</th>
                <th>'.yii::t('app','Total Skorsing').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        $TotalUang = 0;
        $TotalSkorsing = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                    <td>'.$data['total_uang'].'</td>
                    <td>'.$data['total_skorsing'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $TotalUang = $TotalUang + $data['total_uang'];
                        $TotalSkorsing = $TotalSkorsing + $data['total_skorsing'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$TotalUang.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$TotalSkorsing.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtSangsiPelanggaranPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

// var_dump($periode_format);
// die;

        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

                $sql = "SELECT ".$periode_format.",
                    COUNT(*) AS JumlahEksemplar, 
                    '' AS Kriteria, 
                    COUNT(DISTINCT Collections.Catalog_ID) AS JumlahJudul, 
                    SUM(pelanggaran.JumlahDenda) AS total_uang, 
                    SUM(pelanggaran.JumlahSuspend) AS total_skorsing 
                    FROM pelanggaran  
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";

            $sql .= $sqlPeriode;
            $sql .= $andValue;
            if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'JumlahJudul'=>$model['JumlahJudul'], 'JumlahEksemplar'=>$model['JumlahEksemplar'], 'total_uang'=>$model['total_uang'], 'total_skorsing'=>$model['total_skorsing'] );
            $JumlahJudul = $JumlahJudul + $model['JumlahJudul'];
            $JumlahEksemplar = $JumlahEksemplar + $model['JumlahEksemplar'];
            $total_uang = $total_uang + $model['total_uang'];
            $total_skorsing = $total_skorsing + $model['total_skorsing'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlahJudul'=>$JumlahJudul,
        'TotalJumlahEksemplar'=>$JumlahEksemplar,
        'Totaltotal_uang'=>$total_uang,
        'Totaltotal_skorsing'=>$total_skorsing,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'sangsi_pelanggaranpeminjaman'=> yii::t('app','Sangsi Pelanggaran Peminjaman'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal_peminjaman'=> yii::t('app','Tanggal Peminjaman'),
        'jumlah_judul'=> yii::t('app','Jumlah Judul'),
        'jumlah_eksemplar'=> yii::t('app','Jumlah Eksemplar'),
        'total_uang'=> yii::t('app','Total Uang'),
        'total_skorsing'=> yii::t('app','Total Skorsing'),
        
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-pelanggaran-peminjaman-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-pelanggaran-peminjaman-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordSangsiPelanggaranPeminjamanFrekuensi()
{
    // $model = Opaclogs::find()->All();

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

// var_dump($periode_format);
// die;

        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }

                $sql = "SELECT ".$periode_format.",
                    COUNT(*) AS JumlahEksemplar, 
                    '' AS Kriteria, 
                    COUNT(DISTINCT Collections.Catalog_ID) AS JumlahJudul, 
                    SUM(pelanggaran.JumlahDenda) AS total_uang, 
                    SUM(pelanggaran.JumlahSuspend) AS total_skorsing 
                    FROM pelanggaran  
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";

            $sql .= $sqlPeriode;
            $sql .= $andValue;
            if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Sangsi Pelanggaran Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan').' '.$Berdasarkan.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-left: 10px; margin-right: 10px;">
                <th>No.</th>
                <th>'.yii::t('app','Tanggal Peminjaman').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
                <th>'.yii::t('app','Total Uang').'</th>
                <th>'.yii::t('app','Total Skorsing').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        $TotalUang = 0;
        $TotalSkorsing = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                    <td>'.$data['total_uang'].'</td>
                    <td>'.$data['total_skorsing'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $TotalUang = $TotalUang + $data['total_uang'];
                        $TotalSkorsing = $TotalSkorsing + $data['total_skorsing'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$TotalUang.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$TotalSkorsing.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfSangsiPelanggaranPeminjamanFrekuensi()
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
      //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        if (isset($_POST['no_anggota'])) {
            foreach ($_POST['no_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.Member_Id = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['jenis_anggota'])) {
            foreach ($_POST['jenis_anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND jenis_anggota.jenisanggota = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan'])) {
            foreach ($_POST['tujuan'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
        if (isset($_POST['tujuan2'])) {
            foreach ($_POST['tujuan2'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND pelanggaran.CreateBy = "'.addslashes($value).'" ';
                }
            }
        }
            $sql = "SELECT ".$periode_format.",
                    COUNT(*) AS JumlahEksemplar, 
                    '' AS Kriteria, 
                    COUNT(DISTINCT Collections.Catalog_ID) AS JumlahJudul, 
                    SUM(pelanggaran.JumlahDenda) AS total_uang, 
                    SUM(pelanggaran.JumlahSuspend) AS total_skorsing 
                    FROM pelanggaran  
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    LEFT JOIN jenis_anggota ON members.JenisAnggota_id = jenis_anggota.ID 
                    INNER JOIN collections ON pelanggaran.Collection_id = collections.ID 
                    INNER JOIN collectionloanitems ON pelanggaran.CollectionLoanItem_id = collectionloanitems.ID 
                    INNER JOIN users ON pelanggaran.CreateBy = users.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
            $sql .= $sqlPeriode;
            $sql .= $andValue;
            if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%m-%Y'), collections.Catalog_ID ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY DATE_FORMAT(pelanggaran.CreateDate,'%Y-%m-%d') DESC";
                }


        $data = Yii::$app->db->createCommand($sql)->queryAll(); 
        
        $Berdasarkan = array();
        foreach ($_POST['kriterias'] as $key => $value) {
            $Berdasarkan[] .= '' .yii::t('app',$this->getRealNameKriteria($value)).'';
        }
        $Berdasarkan = implode(yii::t('app',' dan '), $Berdasarkan);

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] =  $Berdasarkan; 
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-sangsi-pelanggaran-peminjaman-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }


public function actionRenderKoleksiSeringDipinjamFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.",
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>') AS DATA,
                    (CASE 
                      WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                      THEN CONCAT('<br/>',catalogs.Edition) 
                      ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) 
                    END) AS data2,
                    CONCAT('<br/>',catalogs.PublishLocation,' ') AS data3,
                    catalogs.Publisher AS data4,
                    CONCAT(' ',catalogs.PublishYear,'<br/>') AS data5,
                    CONCAT(catalogs.Subject, '<br/>') AS data6,
                    catalogs.DeweyNo AS data7,
                    COUNT(collections.Catalog_id) AS Jumlah
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID 
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                }

             $sql .= $inValue; 

             // print_r($sql); 
             // die; 

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['inValue'] =  $inValue;  
        //$content['isi_berdasarkan'] = $isi_kriteria;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            /*$header =  ['<img src="<?= Yii::getAlias('@uploaded_files/aplikasi/kop.png');?>" >'];*/
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set =55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            // 'orientation' => Pdf::ORIENT_LANDSCAPE,
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-koleksi-sering-dipinjam-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Data',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelKoleksiSeringDipinjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.",
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>') AS DATA,
                    (CASE 
                      WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                      THEN CONCAT('<br/>',catalogs.Edition) 
                      ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) 
                    END) AS data2,
                    CONCAT('<br/>',catalogs.PublishLocation,' ') AS data3,
                    catalogs.Publisher AS data4,
                    CONCAT(' ',catalogs.PublishYear,'<br/>') AS data5,
                    CONCAT(catalogs.Subject, '<br/>') AS data6,
                    catalogs.DeweyNo AS data7,
                    COUNT(collections.Catalog_id) AS Jumlah
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID 
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                }

             $sql .= $inValue; 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    // $Berdasarkan = array();
    //     foreach ($_POST['kriterias'] as $key => $value) {
    //         $Berdasarkan[] .= '' .$this->getRealNameKriteria($value).'';
    //     }
    //     $Berdasarkan = implode(' dan ', $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Koleksi Sering Dipinjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <td>No.</td>
                <th>'.yii::t('app','Tanggal').'</th>
                <th colspan="3">'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Jumlah Peminjaman').'</th>
            </tr>
            ';
        $no = 1;
        $totalJumlahExemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td style="vertical-align: middle;">'.$no.'</td>
                    <td style="vertical-align: middle;">'.$data['Periode'].'</td>
                    <td colspan="3" style="text-align: left;">'.$data['DATA'], $data['data2'], $data['data3'], $data['data4'], $data['data5'], $data['data6'], $data['data7'].'</td>
                    <td style="vertical-align: middle;">'.$data['Jumlah'].'</td>
                </tr>
            ';
                        $totalJumlahExemplar = $totalJumlahExemplar + $data['Jumlah'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="5" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$totalJumlahExemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtKoleksiSeringDipinjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

             $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.",
                    CONCAT('',catalogs.Title,'','') AS data, 
                    (CASE 
                     WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                     THEN CONCAT('',catalogs.Edition) 
                     ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('',EDISISERIAL) ELSE '' END) 
                    END) AS data2, 
                     CONCAT('',catalogs.PublishLocation,' ') AS data3, 
                     catalogs.Publisher AS data4, 
                     CONCAT(' ',catalogs.PublishYear,'') AS data5, 
                     CONCAT(catalogs.Subject, '') AS data6, 
                     catalogs.DeweyNo AS data7,
                    COUNT(collections.Catalog_id) AS Jumlah
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID 
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                }

             $sql .= $inValue; 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    $Berdasarkan =$inValue;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'data'=>$model['data'], 'data2'=>$model['data2'], 'data3'=>$model['data3'], 
                'data4'=>$model['data4'], 'data5'=>$model['data5'], 'data6'=>$model['data6'], 'data7'=>$model['data7'], 'NoAnggota'=> $model['NoAnggota'],'NamaAnggota'=> $model['NamaAnggota'], 'Jumlah'=>$model['Jumlah'] );
            $Jumlah = $Jumlah + $model['Jumlah'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalEksemplar'=>$Eksemplar,
        'TotalJumlah'=>$Jumlah,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'koleksi_seringdipinjam'=> yii::t('app','Koleksi Sering Dipinjam'),
        'berdasarkan_ranking'=> yii::t('app','Berdasarkan Ranking'),
        'tanggal'=> yii::t('app','Tanggal'),
        'data_bibliografis'=> yii::t('app','Data Bibliografis'),
        'jumlah_peminjaman'=> yii::t('app','Jumlah Peminjaman'),
        
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-koleksi-sering-dipinjam-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-koleksi-sering-dipinjam-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordKoleksiSeringDipinjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.",
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>') AS data,
                    (CASE 
                      WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                      THEN CONCAT('<br/>',catalogs.Edition) 
                      ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) 
                    END) AS data2,
                    CONCAT('<br/>',catalogs.PublishLocation,' ') AS data3,
                    catalogs.Publisher AS data4,
                    CONCAT(' ',catalogs.PublishYear,'<br/>') AS data5,
                    CONCAT(catalogs.Subject, '<br/>') AS data6,
                    catalogs.DeweyNo AS data7,
                    COUNT(collections.Catalog_id) AS Jumlah
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID 
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                }

             $sql .= $inValue; 

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;
    // $Berdasarkan = array();
    //     foreach ($_POST['kriterias'] as $key => $value) {
    //         $Berdasarkan[] .= '' .$this->getRealNameKriteria($value).'';
    //     }
    //     $Berdasarkan = implode(' dan ', $Berdasarkan);

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="6">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Koleksi Sering Dipinjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="6">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <td>No.</td>
                <th>'.yii::t('app','Tanggal').'</th>
                <th colspan="3">'.yii::t('app','Data Bibliografis').'</th>
                <th>'.yii::t('app','Jumlah Peminjaman').'</th>
            </tr>
            ';
        $no = 1;
        $totalJumlahExemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td style="text-align: left;">'.$data['data'], $data['data2'], $data['data3'], $data['data4'], $data['data5'], $data['data6'], $data['data7'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
                        $totalJumlahExemplar = $totalJumlahExemplar + $data['Jumlah'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$totalJumlahExemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfKoleksiSeringDipinjamFrekuensi()    
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2 = yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2 = yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2 = yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.",
                    CONCAT('<b>',catalogs.Title,'</b>','<br/>') AS DATA,
                    (CASE 
                      WHEN catalogs.Worksheet_id <> 4 AND catalogs.Edition IS NOT NULL AND NOT LENGTH(catalogs.Edition) = 0 
                      THEN CONCAT('<br/>',catalogs.Edition) 
                      ELSE (CASE WHEN EDISISERIAL IS NOT NULL THEN CONCAT('<br/>',EDISISERIAL) ELSE '' END) 
                    END) AS data2,
                    CONCAT('<br/>',catalogs.PublishLocation,' ') AS data3,
                    catalogs.Publisher AS data4,
                    CONCAT(' ',catalogs.PublishYear,'<br/>') AS data5,
                    CONCAT(catalogs.Subject, '<br/>') AS data6,
                    catalogs.DeweyNo AS data7,
                    COUNT(collections.Catalog_id) AS Jumlah
                    FROM collectionloanitems 
                    LEFT JOIN collections ON collectionloanitems.Collection_id = collections.ID 
                    LEFT JOIN catalogs ON collections.Catalog_id = catalogs.ID 
                    WHERE DATE(collectionloanitems.LoanDate) ";      
             $sql .= $sqlPeriode;
             $sql .= $andValue;
             if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%M-%Y'), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collections.Catalog_id ORDER BY Jumlah DESC, DATA ASC LIMIT ";
                }

             $sql .= $inValue; 

             // print_r($sql); 
             // die; 

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['inValue'] =  $inValue;  
        //$content['isi_berdasarkan'] = $isi_kriteria;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            /*$header =  ['<img src="<?= Yii::getAlias('@uploaded_files/aplikasi/kop.png');?>" >'];*/
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set =55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-koleksi-sering-dipinjam-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }

public function actionRenderAnggotaSeringMeminjamFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }
   
            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.", 
                    members.MemberNo AS NoAnggota, 
                    members.FullName AS NamaAnggota,
                    collectionloanitems.member_id AS  member_ID, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar,
                    COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul
                    FROM 
                    collectionloanitems
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                }

        $sql .= $inValue;

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content['inValue'] = $inValue;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-anggota-sering-meminjam-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelAnggotaSeringMeminjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
   
            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.", 
                    members.MemberNo AS NoAnggota, 
                    members.FullName AS NamaAnggota,
                    collectionloanitems.member_id AS  member_ID, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar,
                    COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul
                    FROM 
                    collectionloanitems
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                }

        $sql .= $inValue;

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="5">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Anggota Sering Meminjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="4" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtAnggotaSeringMeminjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
   
            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.", 
                    members.MemberNo AS NoAnggota, 
                    members.FullName AS NamaAnggota,
                    collectionloanitems.member_id AS  member_ID, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar,
                    COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul
                    FROM 
                    collectionloanitems
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                }

        $sql .= $inValue;

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++, 'Periode'=>$model['Periode'],'NoAnggota'=>$model['NoAnggota'], 'NamaAnggota'=>$model['NamaAnggota'], 'JumlahJudul'=>$model['JumlahJudul'], 'JumlahEksemplar'=>$model['JumlahEksemplar'] );
            $JumlahJudul = $JumlahJudul + $model['JumlahJudul'];
            $JumlahEksemplar = $JumlahEksemplar + $model['JumlahEksemplar'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlahJudul'=>$JumlahJudul,
        'TotalJumlahEksemplar'=>$JumlahEksemplar,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'anggota_seringmeminjam'=> yii::t('app','Anggota Sering Meminjam'),
        'berdasarkan_ranking'=> yii::t('app','Berdasarkan Ranking'),
        'tanggal'=> yii::t('app','Tanggal'),
        'nomor_anggota'=> yii::t('app','Nomor Anggota'),
        'nama_anggota'=> yii::t('app','Nama Anggota'),
        'jumlah_judul'=> yii::t('app','Jumlah Judul'),
        'jumlah_eksemplar'=> yii::t('app','Jumlah Eksemplar'),
        );
// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-anggota-sering-meminjam-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-anggota-sering-meminjam-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordAnggotaSeringMeminjamFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

   
            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.", 
                    members.MemberNo AS NoAnggota, 
                    members.FullName AS NamaAnggota,
                    collectionloanitems.member_id AS  member_ID, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar,
                    COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul
                    FROM 
                    collectionloanitems
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                }

        $sql .= $inValue;

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="5">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Anggota Sering Meminjam').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="5">'.yii::t('app','Berdasarkan Ranking').' '.$inValue.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-left: 10px; margin-right: 10px; ">
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Nomor Anggota').'</th>
                <th>'.yii::t('app','Nama Anggota').'</th>
                <th>'.yii::t('app','Jumlah Judul').'</th>
                <th>'.yii::t('app','Jumlah Eksemplar').'</th>
            </tr>
            ';
        $no = 1;
        $JumlahJudul = 0;
        $JumlahEksemplar = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['NoAnggota'].'</td>
                    <td>'.$data['NamaAnggota'].'</td>
                    <td>'.$data['JumlahJudul'].'</td>
                    <td>'.$data['JumlahEksemplar'].'</td>
                </tr>
            ';
                        $JumlahJudul = $JumlahJudul + $data['JumlahJudul'];
                        $JumlahEksemplar = $JumlahEksemplar + $data['JumlahEksemplar'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="4" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahJudul.'
                        </td>
                        <td style="font-weight: bold;">
                            '.$JumlahEksemplar.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfAnggotaSeringMeminjamFrekuensi()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $subjek = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(collectionloanitems.LoanDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;

   
            $inValue = $_POST['rank'];

            $sql = "SELECT ".$periode_format.", 
                    members.MemberNo AS NoAnggota, 
                    members.FullName AS NamaAnggota,
                    collectionloanitems.member_id AS  member_ID, COUNT(collectionloanitems.Collection_id) AS JumlahEksemplar,
                    COUNT(DISTINCT(collections.Catalog_id)) AS JumlahJudul
                    FROM 
                    collectionloanitems
                    LEFT JOIN members ON members.ID = collectionloanitems.member_id
                    LEFT JOIN collections ON collections.ID = collectionloanitems.Collection_id
                    LEFT JOIN catalogs ON catalogs.ID = collections.Catalog_id "; 
            $sql .= "WHERE DATE(collectionloanitems.LoanDate) "; 
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(collectionloanitems.LoanDate,'%d-%m-%Y'), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                } else {
                    $sql .= " GROUP BY YEAR(collectionloanitems.LoanDate), collectionloanitems.member_id ORDER BY JumlahEksemplar DESC, DATE_FORMAT(collectionloanitems.LoanDate,'%M-%Y') DESC, NamaAnggota ASC LIMIT ";
                }

        $sql .= $inValue;

        // print_r($sql); 
        //      die;

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['Berdasarkan'] = $Berdasarkan;
        $content['inValue'] = $inValue;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-anggota-sering-meminjam-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }

public function actionRenderKinerjaUserPeminjamanFrekuensi() 
    {
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } 

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

        // print_r(implode($_POST['kataloger']);
        // die;

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-kinerja-user-peminjaman-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
            ]);
        return $pdf->render();

    }

public function actionExportExcelKinerjaUserPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $periode2 = $periode2;
    $format_hari = $periode;
        
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="4">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="4">'.yii::t('app','Kinerja User Peminjaman').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="4">'.$a.' '.$DetailFilter['kataloger'].' '.$dan.' '.$DetailFilter['kriteria'].'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Kataloger').'</th>
                <th>'.yii::t('app','Jumlah').'</th>
            </tr>
            ';
        $no = 1;
        $Jumlah = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
                        $Jumlah = $Jumlah + $data['Jumlah'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtKinerjaUserPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}


    $DetailFilterKriteria = $DetailFilter['kriteria'];
    $DetailFilterKataloger = $DetailFilter['kataloger'];

    $headers = Yii::getAlias('@webroot','/teeeesst');


    // Open Office Calc Area
    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Kataloger'=>$model['Kataloger'], 'Jumlah'=>$model['Jumlah'] );
            $TotalJumlah = $TotalJumlah + $model['Jumlah'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlah'=>$TotalJumlah,
        'a'=>$a,
        'dan'=>$dan,
        'DetailFilterKriteria'=>$DetailFilterKriteria,
        'DetailFilterKataloger'=>$DetailFilterKataloger,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'kinerja_userpeminjaman'=> yii::t('app','Kinerja User Peminjaman'),
        'tanggal'=> yii::t('app','Tanggal'),
        'kataloger'=> yii::t('app','Kataloger'),
        'jumlah'=> yii::t('app','Jumlah'),
        
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-kinerja-user-peminjaman-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-kinerja-user-peminjaman-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordKinerjaUserPeminjamanFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $periode2 = $periode2;
    $format_hari = $periode;
        
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
               <p align="center"> <b>'.yii::t('app','Laporan Frekuensi').' '.$format_hari.' </b></p>
               <p align="center"> <b>'.yii::t('app','Kinerja User Peminjaman').' '.$periode2.' </b></p>
               <p align="center"> <b>'.$a.' '.$DetailFilter['kataloger'].' '.$dan.' '.$DetailFilter['kriteria'].'</b></p>
            ';
    echo '</table>';
        
    if ($type == 'odt') {
    echo '<table border="0" align="center" width="700"> ';
    }else{echo '<table border="1" align="center" width="700"> ';}
        echo '
                <tr>
                    <th>No.</th>
                    <th>'.yii::t('app','Tanggal').'</th>
                    <th>'.yii::t('app','Kataloger').'</th>
                    <th>'.yii::t('app','jumlah').'</th>
                </tr>
            '; 
    $no = 1;
    $Jumlah = 0;
    if ($type == 'odt') {
    echo '<table border="0" align="center"> ';
    }
    foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
        $Jumlah = $Jumlah + $data['Jumlah'];
        $no++;
        endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>                   
                    </tr>
                    ';
    
    echo '</table>';

}

public function actionExportPdfKinerjaUserPeminjamanFrekuensi()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), Kataloger ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 


        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

        // $DetailFilter = Users::find()->select('username')->asArray();
        // $umur = $_POST['kriteria'];

        // print_r($DetailFilter['kriteria']);
        // die;

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }


        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-kinerja-user-peminjaman-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }


public function actionRenderKinerjaUserPengembalianFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } 

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-kinerja-user-pengembalian-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
        ]);
        return $pdf->render();

    }

public function actionExportExcelKinerjaUserPengembalianFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $periode2 = $periode2;
    $format_hari = $periode;
        
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="4">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="4">'.yii::t('app','Kinerja User Pengembalian').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="4">'.$a.' '.$DetailFilter['kataloger'].' '.$dan.' '.$DetailFilter['kriteria'].'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr>
                <th>No.</th>
                <th>'.yii::t('app','Tanggal').'</th>
                <th>'.yii::t('app','Kataloger').'</th>
                <th>'.yii::t('app','Jumlah').'</th>
            </tr>
            ';
        $no = 1;
        $Jumlah = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
                        $Jumlah = $Jumlah + $data['Jumlah'];
                        $no++;
                    endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtKinerjaUserPengembalianFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}


    $DetailFilterKriteria = $DetailFilter['kriteria'];
    $DetailFilterKataloger = $DetailFilter['kataloger'];

    $headers = Yii::getAlias('@webroot','/teeeesst');


    // Open Office Calc Area
    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Kataloger'=>$model['Kataloger'], 'Jumlah'=>$model['Jumlah'] );
            $TotalJumlah = $TotalJumlah + $model['Jumlah'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'Berdasarkan'=>$Berdasarkan, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlah'=>$TotalJumlah,
        'a'=>$a,
        'dan'=>$dan,
        'DetailFilterKriteria'=>$DetailFilterKriteria,
        'DetailFilterKataloger'=>$DetailFilterKataloger,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'kinerja_userpengembalian'=> yii::t('app','Kinerja User Pengembalian'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'tanggal'=> yii::t('app','Tanggal'),
        'kataloger'=> yii::t('app','Kataloger'),
        'jumlah'=> yii::t('app','Jumlah'),
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-kinerja-user-pengembalian-frekuensi.ods'; 

    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-kinerja-user-pengembalian-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordKinerjaUserPengembalianFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

    $periode2 = $periode2;
    $format_hari = $periode;
        
        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

$headers = Yii::getAlias('@webroot','/teeeesst');
// $headers = Yii::$app->urlManager->createUrl('@app',"../uploaded_files/aplikasi/kop.png");
// print_r($headers);
// die;
// $test = self::getRealNameKriteria($kriterias);

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
               <p align="center"> <b>'.yii::t('app','Laporan Frekuensi').' '.$format_hari.' </b></p>
               <p align="center"> <b>'.yii::t('app','Kinerja User Peminjaman').' '.$periode2.' </b></p>
               <p align="center"> <b>'.$a.' '.$DetailFilter['kataloger'].' '.$dan.' '.$DetailFilter['kriteria'].'</b></p>
            ';
    echo '</table>';


    if ($type == 'odt') {
    echo '<table border="0" align="center" width="700"> ';
    }else{echo '<table border="1" align="center" width="700"> ';}
        echo '
                <tr>
                    <td>'.$no.'</td>
                    <td>'.$data['Tanggal'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            '; 
    
    $no = 1;
    $Jumlah = 0;
    if ($type == 'odt') {
    echo '<table border="0" align="center"> ';
    }
    foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Kataloger'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
        $Jumlah = $Jumlah + $data['Jumlah'];
        $no++;
        endforeach;
                echo '
                    <tr align="center">
                        <td colspan="3" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>                   
                    </tr>
                    ';
    
    echo '</table>';

}

public function actionExportPdfKinerjaUserPengembalianFrekuensi()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(modelhistory.date,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['kataloger'])) {
            foreach ($_POST['kataloger'] as $key => $value) {
                if ($value != "0" ) {
                    $andValue .= ' AND modelhistory.user_id  = "'.$value.'" ';
                    $DetailFilter['kataloger'] = 'Kataloger';
                    }else {$DetailFilter['kataloger'] = '';}
                }
            }

            if (isset($_POST['kriteria'])) {
            foreach ($_POST['kriteria'] as $key => $value) {
                $isi_kriteria = $value; 
                if ($value != "" ) {
                    $andValue .= ' AND modelhistory.type = "'.$value.'" ';
                    }
                }
            } 

            switch (implode($_POST['kriteria'])) {
            case '0':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dibuat').') ';
                break;

            case '1':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dimutakhirkan').') ';
                break;

            case '2':
                $DetailFilter['kriteria'] = ' ('.yii::t('app','Kriteria dihapus').') ';
                break;
            
            default:
                $DetailFilter['kriteria'] = null;
                break;
            }


           $sql = "SELECT ".$periode_format.",
                    users.UserName AS Kataloger,
                    COUNT(modelhistory.ID) AS Jumlah 
                    FROM modelhistory 
                    INNER JOIN users ON modelhistory.user_id = users.ID 
                    WHERE DATE(modelhistory.date) ";
        
        $sql .= $sqlPeriode;
        $sql .= " AND modelhistory.table = 'collectionloanitems'";
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(modelhistory.date,'%d-%m-%Y'), DATE_FORMAT(modelhistory.date,'%Y-%m-%d') ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                } else {
                    $sql .= " GROUP BY YEAR(modelhistory.date), users.UserName ORDER BY DATE_FORMAT(modelhistory.date,'%Y-%m-%d') DESC";
                }

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        if(implode($_POST['kataloger']) != '0' || implode($_POST['kriteria']) != ''){
            $a = yii::t('app','Berdasarkan');
        }else{ $a = '';}

        if(implode($_POST['kataloger']) != '0' && implode($_POST['kriteria']) != ''){
            $dan = yii::t('app','dan');
        }else{ $dan = '';}

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['a'] = $a; 
        $content['dan'] = $dan;
        $content['DetailFilter'] = $DetailFilter;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-kinerja-user-pengembalian-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }


public function actionRenderPengembalianTerlambatFrekuensi() 
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    COUNT(pelanggaran.ID) AS Jumlah 
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%M-%Y') ORDER BY Jumlah DESC ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                }

        // echo $test;
        // die;

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['test'] = $test;
        $content['kop'] =  isset($_POST['kop']); 

        if ($content['kop']) {
            $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'content' => $this->renderPartial('pdf-view-pengembalian-terlambat-frekuensi', $content),
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            'methods' => [ 
                'SetHeader'=> $header,
                'SetFooter'=>['<div class="footer" style="margin-right:60px;">Page {PAGENO}</div>'],
            ],
        ]);
        return $pdf->render();

    }

public function actionExportExcelPengembalianTerlambatFrekuensi()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    COUNT(pelanggaran.Member_id) AS Jumlah 
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%M-%Y') ORDER BY Jumlah DESC ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode; 

    $filename = 'Laporan_Periodik_Frekuensi.xls';
    header("Content-type: application/vnd-ms-excel");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center"> 
            <tr>
                <th colspan="3">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="3">'.yii::t('app','Pengembalian Terlambat').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="3">'.yii::t('app','Berdasarkan').' '.yii::t('app','Anggota').' '.$test.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-right: 20px; margin-left: 20px;">
                <th>No.</th>
                <th>'.yii::t('app','Periode').'</th>
                <th>'.yii::t('app','Jumlah').'</th>
            </tr>
            ';
        $no = 1;
        $Jumlah = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
        $Jumlah = $Jumlah + $data['Jumlah'];
        $no++;
        endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>                   
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportExcelOdtPengembalianTerlambatFrekuensi()
{
    $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    COUNT(pelanggaran.Member_id) AS Jumlah 
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%M-%Y') ORDER BY Jumlah DESC ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 
    $periode2 = $periode2;
    $format_hari = $periode;

    $headers = Yii::getAlias('@webroot','/teeeesst');

    $no = 1;
    $data = array();
    foreach($model as $model):
        $data[] = array('no'=> $no++,'Periode'=> $model['Periode'], 'Jumlah'=>$model['Jumlah'] );
            $Jumlah = $Jumlah + $model['Jumlah'];
    endforeach;

    $detail[] = array(
        'menu'=>$menu, 
        'format_hari'=>$format_hari, 
        'periode2'=>$periode2,
        'TotalJumlah'=>$Jumlah,
        'test' => $test,
        );
    $detail2[] = array(
        'laporan_frekuensi'=> yii::t('app','Laporan Frekuensi'),
        'pengembalian_terlambat'=> yii::t('app','Pengembalian Terlambat'),
        'berdasarkan'=> yii::t('app','Berdasarkan'),
        'anggota'=> yii::t('app','Anggota'),
        'tanggal'=> yii::t('app','Tanggal'),
        'jumlah'=> yii::t('app','Jumlah'),
        );

// print_r(sizeof($_POST['kriterias']));
// die;

    $OpenTBS = new \hscstudio\export\OpenTBS; // new instance of TBS
    $template = Yii::getAlias('@uploaded_files').'/templates/laporan/sirkulasi/laporan-sirkulasi-pengembalian-terlambat-frekuensi.ods'; 


    // $OpenTBS->LoadTemplate($template);
    $OpenTBS->LoadTemplate($template, OPENTBS_ALREADY_UTF8); 

    $OpenTBS->MergeBlock('a,b', $data);
    $OpenTBS->MergeBlock('detail', $detail);
    $OpenTBS->MergeBlock('detail2', $detail2);

    $OpenTBS->Show(OPENTBS_DOWNLOAD, 'laporan-sirkulasi-pengembalian-terlambat-frekuensi.ods');
    // !Open Office Calc Area


}

public function actionExportWordPengembalianTerlambatFrekuensi()
{
        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    COUNT(pelanggaran.Member_id) AS Jumlah 
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%M-%Y') ORDER BY Jumlah DESC ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                }

    $model = Yii::$app->db->createCommand($sql)->queryAll(); 

    $periode2 = $periode2;
    $format_hari = $periode; 

    $type = $_GET['type'];
    $filename = 'Laporan_Periodik_Frekuensi.'.$type;
    // header("Content-type: application/vnd-ms-word");
    header("Content-Disposition: attachment; filename =".$filename."");
    header("Pragma: no-cahce");
    header("Expires: 0");
    echo '<table border="0" align="center" width="700"> 
            <tr>
                <th colspan="3">'.yii::t('app','Laporan Frekuensi').' '.$format_hari.'</th>
            </tr>
            <tr>
                <th colspan="3">'.yii::t('app','Pengembalian Terlambat').' '.$periode2.'</th>
            </tr>
            <tr>
                <th colspan="3">'.yii::t('app','Berdasarkan').' '.yii::t('app','Anggota').' '.$test.'</th>
            </tr>
            <tr>
            </tr>
            ';
    echo '<table border="1" align="center">
            <tr style="margin-right: 40px; margin-left: 40px;">
                <th>No.</th>
                <th>'.yii::t('app','Periode').'</th>
                <th>'.yii::t('app','Jumlah').'</th>
            </tr>
            ';
        $no = 1;
        $Jumlah = 0;
        foreach($model as $data):
            echo '
                <tr align="center">
                    <td>'.$no.'</td>
                    <td>'.$data['Periode'].'</td>
                    <td>'.$data['Jumlah'].'</td>
                </tr>
            ';
        $Jumlah = $Jumlah + $data['Jumlah'];
        $no++;
        endforeach;
                echo '
                    <tr align="center">
                        <td colspan="2" style="font-weight: bold;">
                            Total
                        </td>
                        <td style="font-weight: bold;">
                            '.$Jumlah.'
                        </td>                   
                    </tr>
                    ';
        
    echo '</table>';

}

public function actionExportPdfPengembalianTerlambatFrekuensi()
    {

        $_POST =  $_SESSION['Array_POST_Filter'];
        $andValue = '';
        $sqlPeriode = '';
        $test = '';

          //Untuk Header Laporan berdasarkan Periode yng dipilih
        if (isset($_POST['periode'])) 
        {
            if ($_POST['periode'] == "harian") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%d-%M-%Y") Periode';
                $periode = yii::t('app','Harian');
                $periode2= yii::t('app','Periode').' '.$_POST['from_date'].' s/d '.$_POST['to_date'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", strtotime($_POST['from_date']) )."' AND '".date("Y-m-d", strtotime($_POST['to_date']) )."' ";
            } 
            elseif ($_POST['periode'] == "bulanan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%M-%Y") Periode';
                $periode = yii::t('app','Bulanan');
                $periode2= yii::t('app','Periode').' '.date("M", mktime(0, 0, 0, $_POST['fromBulan'], 10)).'-'.$_POST['fromTahun'].' s/d '.date("M", mktime(0, 0, 0, $_POST['toBulan'], 10)).'-'.$_POST['toTahun'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,$_POST['fromBulan'],1,$_POST['fromTahun']))."' AND '".date("Y-m-t", mktime(0,0,0,$_POST['toBulan'],1,$_POST['toTahun']))."' ";
            } 
            elseif ($_POST['periode'] == "tahunan") 
            {
                $periode_format = 'DATE_FORMAT(pelanggaran.CreateDate,"%Y") Periode';
                $periode = yii::t('app','Tahunan');
                $periode2= yii::t('app','Periode').' '.$_POST['fromTahunan'].' s/d '.$_POST['toTahunan'];
                $sqlPeriode = "BETWEEN '".date("Y-m-d", mktime(0,0,0,1,1,$_POST['fromTahunan']))."' AND '".date("Y-m-d", mktime(0,0,0,12,31,$_POST['toTahunan']))."' ";
            }
            else 
            {
                $periode = null;
            }
        }

        // var_dump($_POST['kataloger']);
        // die;
            if (isset($_POST['anggota'])) {
            foreach ($_POST['anggota'] as $key => $value) {
                if ($value != "0" ) {
                    $Members = Members::findOne(['ID' => $value]);
                    $andValue .= ' AND pelanggaran.Member_id = "'.$value.'" ';
                    $test = '('.$Members->Fullname.')';
                    }
                }
            }
            
           $sql = "SELECT ".$periode_format.",
                    COUNT(pelanggaran.Member_id) AS Jumlah 
                    FROM pelanggaran 
                    INNER JOIN members ON pelanggaran.Member_id = members.ID 
                    WHERE DATE(pelanggaran.CreateDate) ";
        
        $sql .= $sqlPeriode;
        $sql .= $andValue;
        if ($_POST['periode'] == "harian"){
                    $sql .= " GROUP BY DATE_FORMAT(pelanggaran.CreateDate,'%d-%M-%Y') ORDER BY Jumlah DESC ";
                } elseif ($_POST['periode'] == "bulanan") {
                    $sql .= " GROUP BY MONTH(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                } else {
                    $sql .= " GROUP BY YEAR(pelanggaran.CreateDate) ORDER BY Jumlah DESC ";
                }

        // echo $test;
        // die;

        $data = Yii::$app->db->createCommand($sql)->queryAll(); 

        $content['LaporanKriteria'] = ""; 
        $content['LaporanSubJudulKriteriaVal'] = '$kriteriaVal'; 
        $content['TableLaporan'] = $data; 
        $content['LaporanPeriode'] = $periode;
        $content['LaporanPeriode2'] = $periode2;
        $content['sql'] = $sql; 
        $content['test'] = $test;
        $content_kop['kop'] =  isset($_POST['kop']); 

        if ($content_kop['kop']) {
            // $header =  ['<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >'];
            $set = 55;
        } else {
            $header =  [''];
            $set = 10;
        }

        $pdf = new Pdf([
            'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
            'marginTop' => $set,
            'marginLeft' => 0,
            'marginRight' => 0,
            'options' => [
            'title' => 'Laporan Frekuensi',
            'subject' => 'Perpustakaan Nasional Republik Indonesia'],
            ]);

        $pdf = $pdf->api; // fetches mpdf api
        $content = $this->renderPartial('pdf-view-pengembalian-terlambat-frekuensi', $content);
        if ($content_kop['kop']) {
        $pdf->SetHTMLHeader('<img src="'.Yii::$app->urlManager->createUrl("../uploaded_files/aplikasi/kop.png").'" style="margin-top: -30px; height: 180; width: 100%;" >');
        }else{
        $pdf->SetHTMLHeader();
        }
        $pdf->SetHTMLFooter('<div class="footer" style="position: relative; float: left;">Pages {PAGENO}</div>');
        $pdf->WriteHtml($content);
        echo $pdf->Output('Laporan_Periodik_Frekuensi.pdf', 'D');

    }

// ////////////////////////////////batas get_real_name///////////////////////////////////////////////// //
public function getRealNameKriteria($kriterias)
    {
        if ($kriterias == 'no_anggota') 
        {
            $name = 'No Anggota';
        } 
        elseif ($kriterias == 'Petugas_perpanjangan') 
        {
            $name = 'Petugas Perpanjangan';
        }
        elseif ($kriterias == 'Kelas_dcc') 
        {
            $name = 'Kelas DCC';
        }
        elseif ($kriterias == 'Kelas_id') 
        {
            $name = 'Kelas';
        }
        elseif ($kriterias == 'program_studi_id') 
        {
            $name = 'Program Studi';
        }
        elseif ($kriterias == 'Jurusan_id') 
        {
            $name = 'Jurusan';
        }
        elseif ($kriterias == 'Publisher') 
        {
            $name = 'Nama Penerbit';
        }
        elseif ($kriterias == 'PublishLocation') 
        {
            $name = 'Kota Terbit';
        }
        elseif ($kriterias == 'nama_institusi') 
        {
            $name = 'Nama Institusi';
        }
        elseif ($kriterias == 'penginput_data') 
        {
            $name = 'Penginput Data';
        }
        elseif ($kriterias == 'PublishYear') 
        {
            $name = 'Tahun Terbit';
        }
        elseif ($kriterias == 'partners') 
        {
            $name = 'Nama Sumber / Rekanan Perolehan';
        }
        elseif ($kriterias == 'harga') 
        {
            $name = 'Harga';
        }
        elseif ($kriterias == 'collectionrules') 
        {
            $name = 'Jenis Akses';
        }
        elseif ($kriterias == 'collectionmedias') 
        {
            $name = 'Jenis Bahan';
        }
        elseif ($kriterias == 'Subject') 
        {
            $name = 'Subjek';
        }
        elseif ($kriterias == 'no_klas') 
        {
            $name = 'Nomor Klass';
        }
        elseif ($kriterias == 'no_panggil') 
        {
            $name = 'Nomor Panggil';
        }
        elseif ($kriterias == 'worksheets') 
        {
            $name = 'Jenis Bahan';
        }
        elseif ($kriterias == 'collectioncategorys') 
        {
            $name = 'Kategori';
        }
        elseif ($kriterias == 'collectionsources') 
        {
            $name = 'Jenis Sumber Perolehan';
        }
        elseif ($kriterias == 'locations') 
        {
            $name = 'Ruang Perpustakaan';
        }
        elseif ($kriterias == 'location_library') 
        {
            $name = 'Lokasi Perpustakaan';
        }
        elseif ($kriterias == 'kecamatan') 
        {
            $name = 'Kecamatan';
        }
        elseif ($kriterias == 'kelurahan') 
        {
            $name = 'Kelurahan';
        }
        elseif ($kriterias == 'jenis_identitas') 
        {
            $name = 'Jenis Identitas';
        }
        elseif ($kriterias == 'Fakultas_id') 
        {
            $name = 'Fakultas';
        }
        elseif ($kriterias == 'kabupaten') 
        {
            $name = 'Kabupaten/Kota Sesuai Identitas';
        }elseif ($kriterias == 'kabupaten2') 
        {
            $name = 'Kabupaten/Kota Sesuai Tempat Tinggal';
        }
        elseif ($kriterias == 'propinsi') 
        {
            $name = 'Propinsi Sesuai Identitas';
        }elseif ($kriterias == 'propinsi2') 
        {
            $name = 'Propinsi Sesuai Tempat Tinggal';
        }
        elseif ($kriterias == 'unit_kerja') 
        {
            $name = 'Unit Kerja';
        }
        elseif ($kriterias == 'Pekerjaan') 
        {
            $name = 'Pekerjaan';
        }
        elseif ($kriterias == 'subjek') 
        {
            $name = 'Subjek';
        }
        elseif ($kriterias == 'jenis_sumber') 
        {
            $name = 'Nama Sumber';
        }
        elseif ($kriterias == 'Partners') 
        {
            $name = 'Nama Sumber';
        } 
        elseif ($kriterias == 'kategori_koleksi') 
        {
            $name = 'Kategori';
        } 
        elseif ($kriterias == 'bentuk_fisik') 
        {
            $name = 'Bentuk Fisik';
        } 
        elseif ($kriterias == 'Pendidikan') 
        {
            $name = 'Pendidikan';
        }
        elseif ($kriterias == 'lokasi_pinjam') 
        {
            $name = 'Lokasi Pinjam';
        }
        elseif ($kriterias == 'tujuan') 
        {
            $name = 'Penginput Data Peminjaman';
        }
        elseif ($kriterias == 'tujuan2') 
        {
            $name = 'Penginput Data Pengembalian';
        }
        elseif ($kriterias == 'Status_Anggota') 
        {
            $name = 'Status Anggota';
        }
        elseif ($kriterias == 'currency') 
        {
            $name = 'Mata Uang';
        }
        elseif ($kriterias == 'Jenis_Anggota') 
        {
            $name = 'Jenis Anggota';
        }
        elseif ($kriterias == 'jenis_kelamin') 
        {
            $name = 'Jenis Kelamin';
        }
        elseif ($kriterias == 'Kelas') 
        {
            $name = 'Kelas';
        }
        elseif ($kriterias == 'jenis_anggota') 
        {
            $name = 'Jenis Anggota';
        }
        elseif ($kriterias == 'Fakultas') 
        {
            $name = 'Fakultas';
        }
        elseif ($kriterias == 'Jurusan') 
        {
            $name = 'Jurusan';
        }
        elseif ($kriterias == 'peminjam_terbanyak') 
        {
            $name = 'Peminjam';
        }
        elseif ($kriterias == 'departments') 
        {
            $name = 'Unit Kerja';
        }
        elseif ($kriterias == 'range_umur') 
        {
            $name = 'Kelompok Umur';
        }
        elseif ($kriterias == 'ruang_perpus') 
        {
            $name = 'Ruang Perpustakaan';
        }
        elseif ($kriterias == 'lokasi_perpus') 
        {
            $name = 'Lokasi Perpustakaan';
        }
        else 
        {
            $name = ' ';
        }
        
        return $name;

    }
}
